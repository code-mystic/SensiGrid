{"map":"{\"version\":3,\"sources\":[\"webpack/universalModuleDefinition\",\"webpack/bootstrap\",\"/Users/pallabbanerjee/Documents/Pallab/Personal/Repository/SensiGrid/src/events/event.js\",\"/Users/pallabbanerjee/Documents/Pallab/Personal/Repository/SensiGrid/src/model/default-config.js\",\"/Users/pallabbanerjee/Documents/Pallab/Personal/Repository/SensiGrid/node_modules/event-emitter-es6/index.js\",\"/Users/pallabbanerjee/Documents/Pallab/Personal/Repository/SensiGrid/src/utilities/CSVProcessor.js\",\"/Users/pallabbanerjee/Documents/Pallab/Personal/Repository/SensiGrid/node_modules/papaparse/papaparse.js\",\"/Users/pallabbanerjee/Documents/Pallab/Personal/Repository/SensiGrid/src/index.js\"],\"names\":[\"root\",\"factory\",\"exports\",\"module\",\"define\",\"amd\",\"window\",\"installedModules\",\"__webpack_require__\",\"moduleId\",\"i\",\"l\",\"modules\",\"call\",\"m\",\"c\",\"d\",\"name\",\"getter\",\"o\",\"Object\",\"defineProperty\",\"configurable\",\"enumerable\",\"get\",\"r\",\"value\",\"n\",\"__esModule\",\"object\",\"property\",\"prototype\",\"hasOwnProperty\",\"p\",\"s\",\"_eventEmitterEs\",\"CustomEvent\",\"_classCallCheck\",\"this\",\"_possibleConstructorReturn\",\"__proto__\",\"getPrototypeOf\",\"type\",\"callback\",\"on\",\"args\",\"arguments\",\"apply\",\"grid_config\",\"width\",\"height\",\"_createClass\",\"defineProperties\",\"target\",\"props\",\"length\",\"descriptor\",\"writable\",\"key\",\"Constructor\",\"protoProps\",\"staticProps\",\"DEFAULT_VALUES\",\"emitDelay\",\"strictMode\",\"EventEmitter\",\"opts\",\"undefined\",\"instance\",\"TypeError\",\"_emitDelay\",\"_strictMode\",\"_listeners\",\"events\",\"listener\",\"once\",\"indexOf\",\"fn\",\"push\",\"_addListenner\",\"eventType\",\"listenerFunc\",\"removedEvents\",\"typeListeners\",\"_this\",\"typeIndex\",\"forEach\",\"idx\",\"unshift\",\"splice\",\"eventArguments\",\"removableListeners\",\"eeListener\",\"_this2\",\"_len\",\"eventArgs\",\"Array\",\"_key\",\"setTimeout\",\"_applyEvents\",\"_len2\",\"_key2\",\"_helpers\",\"e\",\"Error\",\"code\",\"CSVProcessor\",\"data\",\"data_config\",\"rawData\",\"checkURLPattern\",\"detectData\",\"rawDataIsURL\",\"parseCSVtoJSON\",\"csvParser\",\"dt_config\",\"isURL\",\"parsedJSON\",\"_papaparse2\",\"default\",\"parse\",\"download\",\"complete\",\"results\",\"console\",\"log\",\"emit\",\"error\",\"err\",\"file\",\"__WEBPACK_AMD_DEFINE_FACTORY__\",\"__WEBPACK_AMD_DEFINE_ARRAY__\",\"__WEBPACK_AMD_DEFINE_RESULT__\",\"AUTO_SCRIPT_PATH\",\"scripts\",\"global\",\"self\",\"IS_WORKER\",\"document\",\"postMessage\",\"IS_PAPA_WORKER\",\"test\",\"location\",\"search\",\"LOADED_SYNC\",\"workers\",\"workerIdCounter\",\"Papa\",\"_input\",\"_config\",\"dynamicTyping\",\"isFunction\",\"dynamicTypingFunction\",\"worker\",\"WORKERS_SUPPORTED\",\"w\",\"SCRIPT_PATH\",\"workerUrl\",\"Worker\",\"onmessage\",\"mainThreadReceivedMessage\",\"id\",\"newWorker\",\"userStep\",\"step\",\"userChunk\",\"chunk\",\"userComplete\",\"userError\",\"input\",\"config\",\"workerId\",\"streamer\",\"NetworkStreamer\",\"StringStreamer\",\"readable\",\"read\",\"ReadableStreamStreamer\",\"File\",\"FileStreamer\",\"stream\",\"unparse\",\"_quotes\",\"_writeHeader\",\"_delimiter\",\"_newline\",\"_quoteChar\",\"delimiter\",\"BAD_DELIMITERS\",\"quotes\",\"newline\",\"quoteChar\",\"header\",\"quoteCharRegex\",\"RegExp\",\"JSON\",\"serialize\",\"objectKeys\",\"fields\",\"meta\",\"obj\",\"keys\",\"csv\",\"hasHeader\",\"dataKeyedByField\",\"safe\",\"row\",\"maxCol\",\"col\",\"colIdx\",\"str\",\"toString\",\"replace\",\"needsQuotes\",\"substrings\",\"hasAny\",\"charAt\",\"RECORD_SEP\",\"String\",\"fromCharCode\",\"UNIT_SEP\",\"BYTE_ORDER_MARK\",\"LocalChunkSize\",\"RemoteChunkSize\",\"DefaultDelimiter\",\"Parser\",\"ParserHandle\",\"jQuery\",\"$\",\"options\",\"queue\",\"each\",\"supported\",\"prop\",\"toUpperCase\",\"attr\",\"toLowerCase\",\"FileReader\",\"files\",\"inputElem\",\"instanceConfig\",\"extend\",\"parseNextFile\",\"elem\",\"reason\",\"f\",\"before\",\"returned\",\"action\",\"fileComplete\",\"userCompleteFunc\",\"ChunkStreamer\",\"_handle\",\"_paused\",\"_finished\",\"_baseIndex\",\"_partialLine\",\"_rowCount\",\"_start\",\"_nextChunk\",\"isFirstChunk\",\"_completeResults\",\"errors\",\"configCopy\",\"copy\",\"chunkSize\",\"parseInt\",\"parseChunk\",\"beforeFirstChunk\",\"modifiedChunk\",\"aggregate\",\"paused\",\"aborted\",\"lastIndex\",\"cursor\",\"substring\",\"finishedIncludingPreview\",\"preview\",\"WORKER_ID\",\"finished\",\"concat\",\"_sendError\",\"xhr\",\"_readChunk\",\"_chunkLoaded\",\"url\",\"XMLHttpRequest\",\"withCredentials\",\"onload\",\"bindFunction\",\"onerror\",\"_chunkError\",\"open\",\"downloadRequestHeaders\",\"headers\",\"headerName\",\"setRequestHeader\",\"end\",\"send\",\"message\",\"status\",\"readyState\",\"contentRange\",\"getResponseHeader\",\"substr\",\"lastIndexOf\",\"getFileSize\",\"responseText\",\"errorMessage\",\"errorText\",\"statusText\",\"reader\",\"slice\",\"usingAsyncReader\",\"webkitSlice\",\"mozSlice\",\"FileReaderSync\",\"Math\",\"min\",\"size\",\"txt\",\"readAsText\",\"encoding\",\"result\",\"event\",\"remaining\",\"parseOnData\",\"_streamData\",\"_streamEnd\",\"_streamError\",\"shift\",\"_streamCleanUp\",\"removeListener\",\"_parser\",\"_delimiterError\",\"FLOAT\",\"_stepCounter\",\"_aborted\",\"_fields\",\"_results\",\"needsHeaderRow\",\"processResults\",\"abort\",\"addError\",\"skipEmptyLines\",\"j\",\"fillHeaderFields\",\"field\",\"parseDynamic\",\"applyHeaderAndDynamicTyping\",\"shouldApplyDynamicTyping\",\"val\",\"parseFloat\",\"msg\",\"baseIndex\",\"ignoreLastRow\",\"split\",\"nAppearsFirst\",\"numWithN\",\"guessLineEndings\",\"delimGuess\",\"bestDelim\",\"bestDelta\",\"fieldCountPrevRow\",\"delimChoices\",\"delim\",\"delta\",\"avgFieldCount\",\"emptyLinesCount\",\"fieldCount\",\"abs\",\"successful\",\"bestDelimiter\",\"guessDelimiter\",\"parserConfig\",\"pause\",\"getCharIndex\",\"resume\",\"comments\",\"fastMode\",\"inputLen\",\"delimLen\",\"newlineLen\",\"commentsLen\",\"stepIsFunction\",\"lastCursor\",\"returnable\",\"rows\",\"pushRow\",\"doStep\",\"nextDelim\",\"nextNewline\",\"saveRow\",\"quoteSearch\",\"index\",\"finish\",\"newCursor\",\"stopped\",\"linebreak\",\"truncated\",\"handle\",\"completeWorker\",\"notImplemented\",\"terminate\",\"cpy\",\"func\",\"getElementsByTagName\",\"src\",\"body\",\"addEventListener\",\"create\",\"constructor\",\"sensi_grid_config\",\"SensiGrid\",\"gc\",\"gridEvent\",\"_event2\",\"_CSVProcessor2\",\"json\"],\"mappings\":\"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\",\"sourcesContent\":[\"(function webpackUniversalModuleDefinition(root, factory) {\\n\\tif(typeof exports === 'object' && typeof module === 'object')\\n\\t\\tmodule.exports = factory();\\n\\telse if(typeof define === 'function' && define.amd)\\n\\t\\tdefine(\\\"SensiGrid\\\", [], factory);\\n\\telse if(typeof exports === 'object')\\n\\t\\texports[\\\"SensiGrid\\\"] = factory();\\n\\telse\\n\\t\\troot[\\\"SensiGrid\\\"] = factory();\\n})(window, function() {\\nreturn \",\" \\t// The module cache\\n \\tvar installedModules = {};\\n\\n \\t// The require function\\n \\tfunction __webpack_require__(moduleId) {\\n\\n \\t\\t// Check if module is in cache\\n \\t\\tif(installedModules[moduleId]) {\\n \\t\\t\\treturn installedModules[moduleId].exports;\\n \\t\\t}\\n \\t\\t// Create a new module (and put it into the cache)\\n \\t\\tvar module = installedModules[moduleId] = {\\n \\t\\t\\ti: moduleId,\\n \\t\\t\\tl: false,\\n \\t\\t\\texports: {}\\n \\t\\t};\\n\\n \\t\\t// Execute the module function\\n \\t\\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\\n\\n \\t\\t// Flag the module as loaded\\n \\t\\tmodule.l = true;\\n\\n \\t\\t// Return the exports of the module\\n \\t\\treturn module.exports;\\n \\t}\\n\\n\\n \\t// expose the modules object (__webpack_modules__)\\n \\t__webpack_require__.m = modules;\\n\\n \\t// expose the module cache\\n \\t__webpack_require__.c = installedModules;\\n\\n \\t// define getter function for harmony exports\\n \\t__webpack_require__.d = function(exports, name, getter) {\\n \\t\\tif(!__webpack_require__.o(exports, name)) {\\n \\t\\t\\tObject.defineProperty(exports, name, {\\n \\t\\t\\t\\tconfigurable: false,\\n \\t\\t\\t\\tenumerable: true,\\n \\t\\t\\t\\tget: getter\\n \\t\\t\\t});\\n \\t\\t}\\n \\t};\\n\\n \\t// define __esModule on exports\\n \\t__webpack_require__.r = function(exports) {\\n \\t\\tObject.defineProperty(exports, '__esModule', { value: true });\\n \\t};\\n\\n \\t// getDefaultExport function for compatibility with non-harmony modules\\n \\t__webpack_require__.n = function(module) {\\n \\t\\tvar getter = module && module.__esModule ?\\n \\t\\t\\tfunction getDefault() { return module['default']; } :\\n \\t\\t\\tfunction getModuleExports() { return module; };\\n \\t\\t__webpack_require__.d(getter, 'a', getter);\\n \\t\\treturn getter;\\n \\t};\\n\\n \\t// Object.prototype.hasOwnProperty.call\\n \\t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\\n\\n \\t// __webpack_public_path__\\n \\t__webpack_require__.p = \\\"\\\";\\n\\n\\n \\t// Load entry module and return exports\\n \\treturn __webpack_require__(__webpack_require__.s = 6);\\n\",\"import EventEmitter from 'event-emitter-es6';\\n\\nexport default class CustomEvent extends EventEmitter {\\n\\n    constructor () {\\n        super();\\n    }\\n    /**\\n     * Wrapper around event-emiter-es6 class to overwrite\\n     * its `on` method by more well known and conventional \\n     * `addEventListener` method \\n     * @param {String} type String for the event name\\n     * @param {function} callback The listener function to be invoked\\n     */\\n    addEventListener(type, callback) {\\n        this.on(type, function listener(){\\n            var args = arguments;\\n            callback.apply(this, args);\\n        });\\n    }\\n\\n    /*removeEventListener(){\\n\\n    }\\n\\n    dispatchEvent() {\\n\\n    }*/\\n}\",\"export default {\\n    grid_config: {\\n        width: 600,\\n        height: 400\\n    }\\n}\\n\",\"'use strict';\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nvar DEFAULT_VALUES = {\\n    emitDelay: 10,\\n    strictMode: false\\n};\\n\\n/**\\n * @typedef {object} EventEmitterListenerFunc\\n * @property {boolean} once\\n * @property {function} fn\\n */\\n\\n/**\\n * @class EventEmitter\\n *\\n * @private\\n * @property {Object.<string, EventEmitterListenerFunc[]>} _listeners\\n * @property {string[]} events\\n */\\n\\nvar EventEmitter = function () {\\n\\n    /**\\n     * @constructor\\n     * @param {{}}      [opts]\\n     * @param {number}  [opts.emitDelay = 10] - Number in ms. Specifies whether emit will be sync or async. By default - 10ms. If 0 - fires sync\\n     * @param {boolean} [opts.strictMode = false] - is true, Emitter throws error on emit error with no listeners\\n     */\\n\\n    function EventEmitter() {\\n        var opts = arguments.length <= 0 || arguments[0] === undefined ? DEFAULT_VALUES : arguments[0];\\n\\n        _classCallCheck(this, EventEmitter);\\n\\n        var emitDelay = void 0,\\n            strictMode = void 0;\\n\\n        if (opts.hasOwnProperty('emitDelay')) {\\n            emitDelay = opts.emitDelay;\\n        } else {\\n            emitDelay = DEFAULT_VALUES.emitDelay;\\n        }\\n        this._emitDelay = emitDelay;\\n\\n        if (opts.hasOwnProperty('strictMode')) {\\n            strictMode = opts.strictMode;\\n        } else {\\n            strictMode = DEFAULT_VALUES.strictMode;\\n        }\\n        this._strictMode = strictMode;\\n\\n        this._listeners = {};\\n        this.events = [];\\n    }\\n\\n    /**\\n     * @protected\\n     * @param {string} type\\n     * @param {function} listener\\n     * @param {boolean} [once = false]\\n     */\\n\\n\\n    _createClass(EventEmitter, [{\\n        key: '_addListenner',\\n        value: function _addListenner(type, listener, once) {\\n            if (typeof listener !== 'function') {\\n                throw TypeError('listener must be a function');\\n            }\\n\\n            if (this.events.indexOf(type) === -1) {\\n                this._listeners[type] = [{\\n                    once: once,\\n                    fn: listener\\n                }];\\n                this.events.push(type);\\n            } else {\\n                this._listeners[type].push({\\n                    once: once,\\n                    fn: listener\\n                });\\n            }\\n        }\\n\\n        /**\\n         * Subscribes on event type specified function\\n         * @param {string} type\\n         * @param {function} listener\\n         */\\n\\n    }, {\\n        key: 'on',\\n        value: function on(type, listener) {\\n            this._addListenner(type, listener, false);\\n        }\\n\\n        /**\\n         * Subscribes on event type specified function to fire only once\\n         * @param {string} type\\n         * @param {function} listener\\n         */\\n\\n    }, {\\n        key: 'once',\\n        value: function once(type, listener) {\\n            this._addListenner(type, listener, true);\\n        }\\n\\n        /**\\n         * Removes event with specified type. If specified listenerFunc - deletes only one listener of specified type\\n         * @param {string} eventType\\n         * @param {function} [listenerFunc]\\n         */\\n\\n    }, {\\n        key: 'off',\\n        value: function off(eventType, listenerFunc) {\\n            var _this = this;\\n\\n            var typeIndex = this.events.indexOf(eventType);\\n            var hasType = eventType && typeIndex !== -1;\\n\\n            if (hasType) {\\n                if (!listenerFunc) {\\n                    delete this._listeners[eventType];\\n                    this.events.splice(typeIndex, 1);\\n                } else {\\n                    (function () {\\n                        var removedEvents = [];\\n                        var typeListeners = _this._listeners[eventType];\\n\\n                        typeListeners.forEach(\\n                        /**\\n                         * @param {EventEmitterListenerFunc} fn\\n                         * @param {number} idx\\n                         */\\n                        function (fn, idx) {\\n                            if (fn.fn === listenerFunc) {\\n                                removedEvents.unshift(idx);\\n                            }\\n                        });\\n\\n                        removedEvents.forEach(function (idx) {\\n                            typeListeners.splice(idx, 1);\\n                        });\\n\\n                        if (!typeListeners.length) {\\n                            _this.events.splice(typeIndex, 1);\\n                            delete _this._listeners[eventType];\\n                        }\\n                    })();\\n                }\\n            }\\n        }\\n\\n        /**\\n         * Applies arguments to specified event type\\n         * @param {string} eventType\\n         * @param {*[]} eventArguments\\n         * @protected\\n         */\\n\\n    }, {\\n        key: '_applyEvents',\\n        value: function _applyEvents(eventType, eventArguments) {\\n            var typeListeners = this._listeners[eventType];\\n\\n            if (!typeListeners || !typeListeners.length) {\\n                if (this._strictMode) {\\n                    throw 'No listeners specified for event: ' + eventType;\\n                } else {\\n                    return;\\n                }\\n            }\\n\\n            var removableListeners = [];\\n            typeListeners.forEach(function (eeListener, idx) {\\n                eeListener.fn.apply(null, eventArguments);\\n                if (eeListener.once) {\\n                    removableListeners.unshift(idx);\\n                }\\n            });\\n\\n            removableListeners.forEach(function (idx) {\\n                typeListeners.splice(idx, 1);\\n            });\\n        }\\n\\n        /**\\n         * Emits event with specified type and params.\\n         * @param {string} type\\n         * @param eventArgs\\n         */\\n\\n    }, {\\n        key: 'emit',\\n        value: function emit(type) {\\n            var _this2 = this;\\n\\n            for (var _len = arguments.length, eventArgs = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\\n                eventArgs[_key - 1] = arguments[_key];\\n            }\\n\\n            if (this._emitDelay) {\\n                setTimeout(function () {\\n                    _this2._applyEvents.call(_this2, type, eventArgs);\\n                }, this._emitDelay);\\n            } else {\\n                this._applyEvents(type, eventArgs);\\n            }\\n        }\\n\\n        /**\\n         * Emits event with specified type and params synchronously.\\n         * @param {string} type\\n         * @param eventArgs\\n         */\\n\\n    }, {\\n        key: 'emitSync',\\n        value: function emitSync(type) {\\n            for (var _len2 = arguments.length, eventArgs = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\\n                eventArgs[_key2 - 1] = arguments[_key2];\\n            }\\n\\n            this._applyEvents(type, eventArgs);\\n        }\\n\\n        /**\\n         * Destroys EventEmitter\\n         */\\n\\n    }, {\\n        key: 'destroy',\\n        value: function destroy() {\\n            this._listeners = {};\\n            this.events = [];\\n        }\\n    }]);\\n\\n    return EventEmitter;\\n}();\\n\\nmodule.exports = EventEmitter;\\n\",\"import Papa from 'papaparse';\\nimport {checkURLPattern} from './utilities/helpers.js';\\nimport CustomEvent from './events/event.js';\\n\\n/**\\n * Basically an Utility function for understanding the \\n * Type of data (URL, String etc) passed henced kept outside the class\\n * but accessible from this class only. Can be later \\n * shifted to utility shared across project if need be.\\n * @param {*} data \\n */\\nfunction detectData(data) {\\n    let dataType = '';\\n    //check whether this is a URL\\n    if(checkURLPattern(data)) {\\n        dataType = 'URL'\\n    } else{\\n        dataType = 'String'\\n    }\\n\\n    return dataType;\\n}\\n\\nexport default class CSVProcessor extends CustomEvent {\\n\\n    constructor(data) {\\n        //get event power\\n        super();\\n        //Instance specific data config\\n        this.data_config = {};\\n        //if the data is not empty start processing\\n        if(data) {\\n            this.data_config.rawData = data;\\n            if(detectData(data) === 'URL') {\\n                this.data_config.rawDataIsURL = true;\\n            } else {\\n                this.data_config.rawDataIsURL = false;\\n            }\\n\\n            this.parseCSVtoJSON();\\n        }\\n       // debugger;\\n    }\\n\\n    /**\\n     * Method to load and parse the passed CSV using the \\n     * library Papaparse. \\n     */\\n    parseCSVtoJSON () {\\n        let csvParser = this,\\n            dt_config = this.data_config,\\n            data = dt_config && dt_config.rawData,\\n            isURL = dt_config && dt_config.rawDataIsURL,\\n            parsedJSON;\\n            \\n        Papa.parse(data, {\\n            download: isURL,\\n            complete: function(results) {\\n                parsedJSON = results;\\n                console.log(parsedJSON);\\n                csvParser.emit('dataParsed', parsedJSON);\\n            },\\n            error: function(err, file) {\\n                console.log(\\\"ERROR: Error in loading the file : \\\"+ file);\\n            }\\n        });\\n    }\\n\\n    \\n}\",\"/*!\\n\\tPapa Parse\\n\\tv4.3.7\\n\\thttps://github.com/mholt/PapaParse\\n\\tLicense: MIT\\n*/\\n(function(root, factory)\\n{\\n\\tif (typeof define === 'function' && define.amd)\\n\\t{\\n\\t\\t// AMD. Register as an anonymous module.\\n\\t\\tdefine([], factory);\\n\\t}\\n\\telse if (typeof module === 'object' && typeof exports !== 'undefined')\\n\\t{\\n\\t\\t// Node. Does not work with strict CommonJS, but\\n\\t\\t// only CommonJS-like environments that support module.exports,\\n\\t\\t// like Node.\\n\\t\\tmodule.exports = factory();\\n\\t}\\n\\telse\\n\\t{\\n\\t\\t// Browser globals (root is window)\\n\\t\\troot.Papa = factory();\\n\\t}\\n}(this, function()\\n{\\n\\t'use strict';\\n\\n\\tvar global = (function () {\\n\\t\\t// alternative method, similar to `Function('return this')()`\\n\\t\\t// but without using `eval` (which is disabled when\\n\\t\\t// using Content Security Policy).\\n\\n\\t\\tif (typeof self !== 'undefined') { return self; }\\n\\t\\tif (typeof window !== 'undefined') { return window; }\\n\\t\\tif (typeof global !== 'undefined') { return global; }\\n\\n\\t\\t// When running tests none of the above have been defined\\n\\t\\treturn {};\\n\\t})();\\n\\n\\n\\tvar IS_WORKER = !global.document && !!global.postMessage,\\n\\t\\tIS_PAPA_WORKER = IS_WORKER && /(\\\\?|&)papaworker(=|&|$)/.test(global.location.search),\\n\\t\\tLOADED_SYNC = false, AUTO_SCRIPT_PATH;\\n\\tvar workers = {}, workerIdCounter = 0;\\n\\n\\tvar Papa = {};\\n\\n\\tPapa.parse = CsvToJson;\\n\\tPapa.unparse = JsonToCsv;\\n\\n\\tPapa.RECORD_SEP = String.fromCharCode(30);\\n\\tPapa.UNIT_SEP = String.fromCharCode(31);\\n\\tPapa.BYTE_ORDER_MARK = '\\\\ufeff';\\n\\tPapa.BAD_DELIMITERS = ['\\\\r', '\\\\n', '\\\"', Papa.BYTE_ORDER_MARK];\\n\\tPapa.WORKERS_SUPPORTED = !IS_WORKER && !!global.Worker;\\n\\tPapa.SCRIPT_PATH = null;\\t// Must be set by your code if you use workers and this lib is loaded asynchronously\\n\\n\\t// Configurable chunk sizes for local and remote files, respectively\\n\\tPapa.LocalChunkSize = 1024 * 1024 * 10;\\t// 10 MB\\n\\tPapa.RemoteChunkSize = 1024 * 1024 * 5;\\t// 5 MB\\n\\tPapa.DefaultDelimiter = ',';\\t\\t\\t// Used if not specified and detection fails\\n\\n\\t// Exposed for testing and development only\\n\\tPapa.Parser = Parser;\\n\\tPapa.ParserHandle = ParserHandle;\\n\\tPapa.NetworkStreamer = NetworkStreamer;\\n\\tPapa.FileStreamer = FileStreamer;\\n\\tPapa.StringStreamer = StringStreamer;\\n\\tPapa.ReadableStreamStreamer = ReadableStreamStreamer;\\n\\n\\tif (global.jQuery)\\n\\t{\\n\\t\\tvar $ = global.jQuery;\\n\\t\\t$.fn.parse = function(options)\\n\\t\\t{\\n\\t\\t\\tvar config = options.config || {};\\n\\t\\t\\tvar queue = [];\\n\\n\\t\\t\\tthis.each(function(idx)\\n\\t\\t\\t{\\n\\t\\t\\t\\tvar supported = $(this).prop('tagName').toUpperCase() === 'INPUT'\\n\\t\\t\\t\\t\\t\\t\\t\\t&& $(this).attr('type').toLowerCase() === 'file'\\n\\t\\t\\t\\t\\t\\t\\t\\t&& global.FileReader;\\n\\n\\t\\t\\t\\tif (!supported || !this.files || this.files.length === 0)\\n\\t\\t\\t\\t\\treturn true;\\t// continue to next input element\\n\\n\\t\\t\\t\\tfor (var i = 0; i < this.files.length; i++)\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\tqueue.push({\\n\\t\\t\\t\\t\\t\\tfile: this.files[i],\\n\\t\\t\\t\\t\\t\\tinputElem: this,\\n\\t\\t\\t\\t\\t\\tinstanceConfig: $.extend({}, config)\\n\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t}\\n\\t\\t\\t});\\n\\n\\t\\t\\tparseNextFile();\\t// begin parsing\\n\\t\\t\\treturn this;\\t\\t// maintains chainability\\n\\n\\n\\t\\t\\tfunction parseNextFile()\\n\\t\\t\\t{\\n\\t\\t\\t\\tif (queue.length === 0)\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\tif (isFunction(options.complete))\\n\\t\\t\\t\\t\\t\\toptions.complete();\\n\\t\\t\\t\\t\\treturn;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tvar f = queue[0];\\n\\n\\t\\t\\t\\tif (isFunction(options.before))\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\tvar returned = options.before(f.file, f.inputElem);\\n\\n\\t\\t\\t\\t\\tif (typeof returned === 'object')\\n\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\tif (returned.action === 'abort')\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\terror('AbortError', f.file, f.inputElem, returned.reason);\\n\\t\\t\\t\\t\\t\\t\\treturn;\\t// Aborts all queued files immediately\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\telse if (returned.action === 'skip')\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\tfileComplete();\\t// parse the next file in the queue, if any\\n\\t\\t\\t\\t\\t\\t\\treturn;\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\telse if (typeof returned.config === 'object')\\n\\t\\t\\t\\t\\t\\t\\tf.instanceConfig = $.extend(f.instanceConfig, returned.config);\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\telse if (returned === 'skip')\\n\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\tfileComplete();\\t// parse the next file in the queue, if any\\n\\t\\t\\t\\t\\t\\treturn;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// Wrap up the user's complete callback, if any, so that ours also gets executed\\n\\t\\t\\t\\tvar userCompleteFunc = f.instanceConfig.complete;\\n\\t\\t\\t\\tf.instanceConfig.complete = function(results)\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\tif (isFunction(userCompleteFunc))\\n\\t\\t\\t\\t\\t\\tuserCompleteFunc(results, f.file, f.inputElem);\\n\\t\\t\\t\\t\\tfileComplete();\\n\\t\\t\\t\\t};\\n\\n\\t\\t\\t\\tPapa.parse(f.file, f.instanceConfig);\\n\\t\\t\\t}\\n\\n\\t\\t\\tfunction error(name, file, elem, reason)\\n\\t\\t\\t{\\n\\t\\t\\t\\tif (isFunction(options.error))\\n\\t\\t\\t\\t\\toptions.error({name: name}, file, elem, reason);\\n\\t\\t\\t}\\n\\n\\t\\t\\tfunction fileComplete()\\n\\t\\t\\t{\\n\\t\\t\\t\\tqueue.splice(0, 1);\\n\\t\\t\\t\\tparseNextFile();\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\n\\tif (IS_PAPA_WORKER)\\n\\t{\\n\\t\\tglobal.onmessage = workerThreadReceivedMessage;\\n\\t}\\n\\telse if (Papa.WORKERS_SUPPORTED)\\n\\t{\\n\\t\\tAUTO_SCRIPT_PATH = getScriptPath();\\n\\n\\t\\t// Check if the script was loaded synchronously\\n\\t\\tif (!document.body)\\n\\t\\t{\\n\\t\\t\\t// Body doesn't exist yet, must be synchronous\\n\\t\\t\\tLOADED_SYNC = true;\\n\\t\\t}\\n\\t\\telse\\n\\t\\t{\\n\\t\\t\\tdocument.addEventListener('DOMContentLoaded', function () {\\n\\t\\t\\t\\tLOADED_SYNC = true;\\n\\t\\t\\t}, true);\\n\\t\\t}\\n\\t}\\n\\n\\n\\n\\n\\tfunction CsvToJson(_input, _config)\\n\\t{\\n\\t\\t_config = _config || {};\\n\\t\\tvar dynamicTyping = _config.dynamicTyping || false;\\n\\t\\tif (isFunction(dynamicTyping)) {\\n\\t\\t\\t_config.dynamicTypingFunction = dynamicTyping;\\n\\t\\t\\t// Will be filled on first row call\\n\\t\\t\\tdynamicTyping = {};\\n\\t\\t}\\n\\t\\t_config.dynamicTyping = dynamicTyping;\\n\\n\\t\\tif (_config.worker && Papa.WORKERS_SUPPORTED)\\n\\t\\t{\\n\\t\\t\\tvar w = newWorker();\\n\\n\\t\\t\\tw.userStep = _config.step;\\n\\t\\t\\tw.userChunk = _config.chunk;\\n\\t\\t\\tw.userComplete = _config.complete;\\n\\t\\t\\tw.userError = _config.error;\\n\\n\\t\\t\\t_config.step = isFunction(_config.step);\\n\\t\\t\\t_config.chunk = isFunction(_config.chunk);\\n\\t\\t\\t_config.complete = isFunction(_config.complete);\\n\\t\\t\\t_config.error = isFunction(_config.error);\\n\\t\\t\\tdelete _config.worker;\\t// prevent infinite loop\\n\\n\\t\\t\\tw.postMessage({\\n\\t\\t\\t\\tinput: _input,\\n\\t\\t\\t\\tconfig: _config,\\n\\t\\t\\t\\tworkerId: w.id\\n\\t\\t\\t});\\n\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tvar streamer = null;\\n\\t\\tif (typeof _input === 'string')\\n\\t\\t{\\n\\t\\t\\tif (_config.download)\\n\\t\\t\\t\\tstreamer = new NetworkStreamer(_config);\\n\\t\\t\\telse\\n\\t\\t\\t\\tstreamer = new StringStreamer(_config);\\n\\t\\t}\\n\\t\\telse if (_input.readable === true && isFunction(_input.read) && isFunction(_input.on))\\n\\t\\t{\\n\\t\\t\\tstreamer = new ReadableStreamStreamer(_config);\\n\\t\\t}\\n\\t\\telse if ((global.File && _input instanceof File) || _input instanceof Object)\\t// ...Safari. (see issue #106)\\n\\t\\t\\tstreamer = new FileStreamer(_config);\\n\\n\\t\\treturn streamer.stream(_input);\\n\\t}\\n\\n\\n\\n\\n\\n\\n\\tfunction JsonToCsv(_input, _config)\\n\\t{\\n\\t\\tvar _output = '';\\n\\t\\tvar _fields = [];\\n\\n\\t\\t// Default configuration\\n\\n\\t\\t/** whether to surround every datum with quotes */\\n\\t\\tvar _quotes = false;\\n\\n\\t\\t/** whether to write headers */\\n\\t\\tvar _writeHeader = true;\\n\\n\\t\\t/** delimiting character */\\n\\t\\tvar _delimiter = ',';\\n\\n\\t\\t/** newline character(s) */\\n\\t\\tvar _newline = '\\\\r\\\\n';\\n\\n\\t\\t/** quote character */\\n\\t\\tvar _quoteChar = '\\\"';\\n\\n\\t\\tunpackConfig();\\n\\n\\t\\tvar quoteCharRegex = new RegExp(_quoteChar, 'g');\\n\\n\\t\\tif (typeof _input === 'string')\\n\\t\\t\\t_input = JSON.parse(_input);\\n\\n\\t\\tif (_input instanceof Array)\\n\\t\\t{\\n\\t\\t\\tif (!_input.length || _input[0] instanceof Array)\\n\\t\\t\\t\\treturn serialize(null, _input);\\n\\t\\t\\telse if (typeof _input[0] === 'object')\\n\\t\\t\\t\\treturn serialize(objectKeys(_input[0]), _input);\\n\\t\\t}\\n\\t\\telse if (typeof _input === 'object')\\n\\t\\t{\\n\\t\\t\\tif (typeof _input.data === 'string')\\n\\t\\t\\t\\t_input.data = JSON.parse(_input.data);\\n\\n\\t\\t\\tif (_input.data instanceof Array)\\n\\t\\t\\t{\\n\\t\\t\\t\\tif (!_input.fields)\\n\\t\\t\\t\\t\\t_input.fields =  _input.meta && _input.meta.fields;\\n\\n\\t\\t\\t\\tif (!_input.fields)\\n\\t\\t\\t\\t\\t_input.fields =  _input.data[0] instanceof Array\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t? _input.fields\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t: objectKeys(_input.data[0]);\\n\\n\\t\\t\\t\\tif (!(_input.data[0] instanceof Array) && typeof _input.data[0] !== 'object')\\n\\t\\t\\t\\t\\t_input.data = [_input.data];\\t// handles input like [1,2,3] or ['asdf']\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn serialize(_input.fields || [], _input.data || []);\\n\\t\\t}\\n\\n\\t\\t// Default (any valid paths should return before this)\\n\\t\\tthrow 'exception: Unable to serialize unrecognized input';\\n\\n\\n\\t\\tfunction unpackConfig()\\n\\t\\t{\\n\\t\\t\\tif (typeof _config !== 'object')\\n\\t\\t\\t\\treturn;\\n\\n\\t\\t\\tif (typeof _config.delimiter === 'string'\\n\\t\\t\\t\\t&& _config.delimiter.length === 1\\n\\t\\t\\t\\t&& Papa.BAD_DELIMITERS.indexOf(_config.delimiter) === -1)\\n\\t\\t\\t{\\n\\t\\t\\t\\t_delimiter = _config.delimiter;\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (typeof _config.quotes === 'boolean'\\n\\t\\t\\t\\t|| _config.quotes instanceof Array)\\n\\t\\t\\t\\t_quotes = _config.quotes;\\n\\n\\t\\t\\tif (typeof _config.newline === 'string')\\n\\t\\t\\t\\t_newline = _config.newline;\\n\\n\\t\\t\\tif (typeof _config.quoteChar === 'string')\\n\\t\\t\\t\\t_quoteChar = _config.quoteChar;\\n\\n\\t\\t\\tif (typeof _config.header === 'boolean')\\n\\t\\t\\t\\t_writeHeader = _config.header;\\n\\t\\t}\\n\\n\\n\\t\\t/** Turns an object's keys into an array */\\n\\t\\tfunction objectKeys(obj)\\n\\t\\t{\\n\\t\\t\\tif (typeof obj !== 'object')\\n\\t\\t\\t\\treturn [];\\n\\t\\t\\tvar keys = [];\\n\\t\\t\\tfor (var key in obj)\\n\\t\\t\\t\\tkeys.push(key);\\n\\t\\t\\treturn keys;\\n\\t\\t}\\n\\n\\t\\t/** The double for loop that iterates the data and writes out a CSV string including header row */\\n\\t\\tfunction serialize(fields, data)\\n\\t\\t{\\n\\t\\t\\tvar csv = '';\\n\\n\\t\\t\\tif (typeof fields === 'string')\\n\\t\\t\\t\\tfields = JSON.parse(fields);\\n\\t\\t\\tif (typeof data === 'string')\\n\\t\\t\\t\\tdata = JSON.parse(data);\\n\\n\\t\\t\\tvar hasHeader = fields instanceof Array && fields.length > 0;\\n\\t\\t\\tvar dataKeyedByField = !(data[0] instanceof Array);\\n\\n\\t\\t\\t// If there a header row, write it first\\n\\t\\t\\tif (hasHeader && _writeHeader)\\n\\t\\t\\t{\\n\\t\\t\\t\\tfor (var i = 0; i < fields.length; i++)\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\tif (i > 0)\\n\\t\\t\\t\\t\\t\\tcsv += _delimiter;\\n\\t\\t\\t\\t\\tcsv += safe(fields[i], i);\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tif (data.length > 0)\\n\\t\\t\\t\\t\\tcsv += _newline;\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Then write out the data\\n\\t\\t\\tfor (var row = 0; row < data.length; row++)\\n\\t\\t\\t{\\n\\t\\t\\t\\tvar maxCol = hasHeader ? fields.length : data[row].length;\\n\\n\\t\\t\\t\\tfor (var col = 0; col < maxCol; col++)\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\tif (col > 0)\\n\\t\\t\\t\\t\\t\\tcsv += _delimiter;\\n\\t\\t\\t\\t\\tvar colIdx = hasHeader && dataKeyedByField ? fields[col] : col;\\n\\t\\t\\t\\t\\tcsv += safe(data[row][colIdx], col);\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif (row < data.length - 1)\\n\\t\\t\\t\\t\\tcsv += _newline;\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn csv;\\n\\t\\t}\\n\\n\\t\\t/** Encloses a value around quotes if needed (makes a value safe for CSV insertion) */\\n\\t\\tfunction safe(str, col)\\n\\t\\t{\\n\\t\\t\\tif (typeof str === 'undefined' || str === null)\\n\\t\\t\\t\\treturn '';\\n\\n\\t\\t\\tstr = str.toString().replace(quoteCharRegex, _quoteChar+_quoteChar);\\n\\n\\t\\t\\tvar needsQuotes = (typeof _quotes === 'boolean' && _quotes)\\n\\t\\t\\t\\t\\t\\t\\t|| (_quotes instanceof Array && _quotes[col])\\n\\t\\t\\t\\t\\t\\t\\t|| hasAny(str, Papa.BAD_DELIMITERS)\\n\\t\\t\\t\\t\\t\\t\\t|| str.indexOf(_delimiter) > -1\\n\\t\\t\\t\\t\\t\\t\\t|| str.charAt(0) === ' '\\n\\t\\t\\t\\t\\t\\t\\t|| str.charAt(str.length - 1) === ' ';\\n\\n\\t\\t\\treturn needsQuotes ? _quoteChar + str + _quoteChar : str;\\n\\t\\t}\\n\\n\\t\\tfunction hasAny(str, substrings)\\n\\t\\t{\\n\\t\\t\\tfor (var i = 0; i < substrings.length; i++)\\n\\t\\t\\t\\tif (str.indexOf(substrings[i]) > -1)\\n\\t\\t\\t\\t\\treturn true;\\n\\t\\t\\treturn false;\\n\\t\\t}\\n\\t}\\n\\n\\t/** ChunkStreamer is the base prototype for various streamer implementations. */\\n\\tfunction ChunkStreamer(config)\\n\\t{\\n\\t\\tthis._handle = null;\\n\\t\\tthis._paused = false;\\n\\t\\tthis._finished = false;\\n\\t\\tthis._input = null;\\n\\t\\tthis._baseIndex = 0;\\n\\t\\tthis._partialLine = '';\\n\\t\\tthis._rowCount = 0;\\n\\t\\tthis._start = 0;\\n\\t\\tthis._nextChunk = null;\\n\\t\\tthis.isFirstChunk = true;\\n\\t\\tthis._completeResults = {\\n\\t\\t\\tdata: [],\\n\\t\\t\\terrors: [],\\n\\t\\t\\tmeta: {}\\n\\t\\t};\\n\\t\\treplaceConfig.call(this, config);\\n\\n\\t\\tthis.parseChunk = function(chunk)\\n\\t\\t{\\n\\t\\t\\t// First chunk pre-processing\\n\\t\\t\\tif (this.isFirstChunk && isFunction(this._config.beforeFirstChunk))\\n\\t\\t\\t{\\n\\t\\t\\t\\tvar modifiedChunk = this._config.beforeFirstChunk(chunk);\\n\\t\\t\\t\\tif (modifiedChunk !== undefined)\\n\\t\\t\\t\\t\\tchunk = modifiedChunk;\\n\\t\\t\\t}\\n\\t\\t\\tthis.isFirstChunk = false;\\n\\n\\t\\t\\t// Rejoin the line we likely just split in two by chunking the file\\n\\t\\t\\tvar aggregate = this._partialLine + chunk;\\n\\t\\t\\tthis._partialLine = '';\\n\\n\\t\\t\\tvar results = this._handle.parse(aggregate, this._baseIndex, !this._finished);\\n\\n\\t\\t\\tif (this._handle.paused() || this._handle.aborted())\\n\\t\\t\\t\\treturn;\\n\\n\\t\\t\\tvar lastIndex = results.meta.cursor;\\n\\n\\t\\t\\tif (!this._finished)\\n\\t\\t\\t{\\n\\t\\t\\t\\tthis._partialLine = aggregate.substring(lastIndex - this._baseIndex);\\n\\t\\t\\t\\tthis._baseIndex = lastIndex;\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (results && results.data)\\n\\t\\t\\t\\tthis._rowCount += results.data.length;\\n\\n\\t\\t\\tvar finishedIncludingPreview = this._finished || (this._config.preview && this._rowCount >= this._config.preview);\\n\\n\\t\\t\\tif (IS_PAPA_WORKER)\\n\\t\\t\\t{\\n\\t\\t\\t\\tglobal.postMessage({\\n\\t\\t\\t\\t\\tresults: results,\\n\\t\\t\\t\\t\\tworkerId: Papa.WORKER_ID,\\n\\t\\t\\t\\t\\tfinished: finishedIncludingPreview\\n\\t\\t\\t\\t});\\n\\t\\t\\t}\\n\\t\\t\\telse if (isFunction(this._config.chunk))\\n\\t\\t\\t{\\n\\t\\t\\t\\tthis._config.chunk(results, this._handle);\\n\\t\\t\\t\\tif (this._paused)\\n\\t\\t\\t\\t\\treturn;\\n\\t\\t\\t\\tresults = undefined;\\n\\t\\t\\t\\tthis._completeResults = undefined;\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (!this._config.step && !this._config.chunk) {\\n\\t\\t\\t\\tthis._completeResults.data = this._completeResults.data.concat(results.data);\\n\\t\\t\\t\\tthis._completeResults.errors = this._completeResults.errors.concat(results.errors);\\n\\t\\t\\t\\tthis._completeResults.meta = results.meta;\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (finishedIncludingPreview && isFunction(this._config.complete) && (!results || !results.meta.aborted))\\n\\t\\t\\t\\tthis._config.complete(this._completeResults, this._input);\\n\\n\\t\\t\\tif (!finishedIncludingPreview && (!results || !results.meta.paused))\\n\\t\\t\\t\\tthis._nextChunk();\\n\\n\\t\\t\\treturn results;\\n\\t\\t};\\n\\n\\t\\tthis._sendError = function(error)\\n\\t\\t{\\n\\t\\t\\tif (isFunction(this._config.error))\\n\\t\\t\\t\\tthis._config.error(error);\\n\\t\\t\\telse if (IS_PAPA_WORKER && this._config.error)\\n\\t\\t\\t{\\n\\t\\t\\t\\tglobal.postMessage({\\n\\t\\t\\t\\t\\tworkerId: Papa.WORKER_ID,\\n\\t\\t\\t\\t\\terror: error,\\n\\t\\t\\t\\t\\tfinished: false\\n\\t\\t\\t\\t});\\n\\t\\t\\t}\\n\\t\\t};\\n\\n\\t\\tfunction replaceConfig(config)\\n\\t\\t{\\n\\t\\t\\t// Deep-copy the config so we can edit it\\n\\t\\t\\tvar configCopy = copy(config);\\n\\t\\t\\tconfigCopy.chunkSize = parseInt(configCopy.chunkSize);\\t// parseInt VERY important so we don't concatenate strings!\\n\\t\\t\\tif (!config.step && !config.chunk)\\n\\t\\t\\t\\tconfigCopy.chunkSize = null;  // disable Range header if not streaming; bad values break IIS - see issue #196\\n\\t\\t\\tthis._handle = new ParserHandle(configCopy);\\n\\t\\t\\tthis._handle.streamer = this;\\n\\t\\t\\tthis._config = configCopy;\\t// persist the copy to the caller\\n\\t\\t}\\n\\t}\\n\\n\\n\\tfunction NetworkStreamer(config)\\n\\t{\\n\\t\\tconfig = config || {};\\n\\t\\tif (!config.chunkSize)\\n\\t\\t\\tconfig.chunkSize = Papa.RemoteChunkSize;\\n\\t\\tChunkStreamer.call(this, config);\\n\\n\\t\\tvar xhr;\\n\\n\\t\\tif (IS_WORKER)\\n\\t\\t{\\n\\t\\t\\tthis._nextChunk = function()\\n\\t\\t\\t{\\n\\t\\t\\t\\tthis._readChunk();\\n\\t\\t\\t\\tthis._chunkLoaded();\\n\\t\\t\\t};\\n\\t\\t}\\n\\t\\telse\\n\\t\\t{\\n\\t\\t\\tthis._nextChunk = function()\\n\\t\\t\\t{\\n\\t\\t\\t\\tthis._readChunk();\\n\\t\\t\\t};\\n\\t\\t}\\n\\n\\t\\tthis.stream = function(url)\\n\\t\\t{\\n\\t\\t\\tthis._input = url;\\n\\t\\t\\tthis._nextChunk();\\t// Starts streaming\\n\\t\\t};\\n\\n\\t\\tthis._readChunk = function()\\n\\t\\t{\\n\\t\\t\\tif (this._finished)\\n\\t\\t\\t{\\n\\t\\t\\t\\tthis._chunkLoaded();\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\n\\t\\t\\txhr = new XMLHttpRequest();\\n\\n\\t\\t\\tif (this._config.withCredentials)\\n\\t\\t\\t{\\n\\t\\t\\t\\txhr.withCredentials = this._config.withCredentials;\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (!IS_WORKER)\\n\\t\\t\\t{\\n\\t\\t\\t\\txhr.onload = bindFunction(this._chunkLoaded, this);\\n\\t\\t\\t\\txhr.onerror = bindFunction(this._chunkError, this);\\n\\t\\t\\t}\\n\\n\\t\\t\\txhr.open('GET', this._input, !IS_WORKER);\\n\\t\\t\\t// Headers can only be set when once the request state is OPENED\\n\\t\\t\\tif (this._config.downloadRequestHeaders)\\n\\t\\t\\t{\\n\\t\\t\\t\\tvar headers = this._config.downloadRequestHeaders;\\n\\n\\t\\t\\t\\tfor (var headerName in headers)\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\txhr.setRequestHeader(headerName, headers[headerName]);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (this._config.chunkSize)\\n\\t\\t\\t{\\n\\t\\t\\t\\tvar end = this._start + this._config.chunkSize - 1;\\t// minus one because byte range is inclusive\\n\\t\\t\\t\\txhr.setRequestHeader('Range', 'bytes='+this._start+'-'+end);\\n\\t\\t\\t\\txhr.setRequestHeader('If-None-Match', 'webkit-no-cache'); // https://bugs.webkit.org/show_bug.cgi?id=82672\\n\\t\\t\\t}\\n\\n\\t\\t\\ttry {\\n\\t\\t\\t\\txhr.send();\\n\\t\\t\\t}\\n\\t\\t\\tcatch (err) {\\n\\t\\t\\t\\tthis._chunkError(err.message);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (IS_WORKER && xhr.status === 0)\\n\\t\\t\\t\\tthis._chunkError();\\n\\t\\t\\telse\\n\\t\\t\\t\\tthis._start += this._config.chunkSize;\\n\\t\\t}\\n\\n\\t\\tthis._chunkLoaded = function()\\n\\t\\t{\\n\\t\\t\\tif (xhr.readyState != 4)\\n\\t\\t\\t\\treturn;\\n\\n\\t\\t\\tif (xhr.status < 200 || xhr.status >= 400)\\n\\t\\t\\t{\\n\\t\\t\\t\\tthis._chunkError();\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\n\\t\\t\\tthis._finished = !this._config.chunkSize || this._start > getFileSize(xhr);\\n\\t\\t\\tthis.parseChunk(xhr.responseText);\\n\\t\\t}\\n\\n\\t\\tthis._chunkError = function(errorMessage)\\n\\t\\t{\\n\\t\\t\\tvar errorText = xhr.statusText || errorMessage;\\n\\t\\t\\tthis._sendError(errorText);\\n\\t\\t}\\n\\n\\t\\tfunction getFileSize(xhr)\\n\\t\\t{\\n\\t\\t\\tvar contentRange = xhr.getResponseHeader('Content-Range');\\n\\t\\t\\tif (contentRange === null) { // no content range, then finish!\\n\\t\\t\\t\\t\\treturn -1;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\treturn parseInt(contentRange.substr(contentRange.lastIndexOf('/') + 1));\\n\\t\\t}\\n\\t}\\n\\tNetworkStreamer.prototype = Object.create(ChunkStreamer.prototype);\\n\\tNetworkStreamer.prototype.constructor = NetworkStreamer;\\n\\n\\n\\tfunction FileStreamer(config)\\n\\t{\\n\\t\\tconfig = config || {};\\n\\t\\tif (!config.chunkSize)\\n\\t\\t\\tconfig.chunkSize = Papa.LocalChunkSize;\\n\\t\\tChunkStreamer.call(this, config);\\n\\n\\t\\tvar reader, slice;\\n\\n\\t\\t// FileReader is better than FileReaderSync (even in worker) - see http://stackoverflow.com/q/24708649/1048862\\n\\t\\t// But Firefox is a pill, too - see issue #76: https://github.com/mholt/PapaParse/issues/76\\n\\t\\tvar usingAsyncReader = typeof FileReader !== 'undefined';\\t// Safari doesn't consider it a function - see issue #105\\n\\n\\t\\tthis.stream = function(file)\\n\\t\\t{\\n\\t\\t\\tthis._input = file;\\n\\t\\t\\tslice = file.slice || file.webkitSlice || file.mozSlice;\\n\\n\\t\\t\\tif (usingAsyncReader)\\n\\t\\t\\t{\\n\\t\\t\\t\\treader = new FileReader();\\t\\t// Preferred method of reading files, even in workers\\n\\t\\t\\t\\treader.onload = bindFunction(this._chunkLoaded, this);\\n\\t\\t\\t\\treader.onerror = bindFunction(this._chunkError, this);\\n\\t\\t\\t}\\n\\t\\t\\telse\\n\\t\\t\\t\\treader = new FileReaderSync();\\t// Hack for running in a web worker in Firefox\\n\\n\\t\\t\\tthis._nextChunk();\\t// Starts streaming\\n\\t\\t};\\n\\n\\t\\tthis._nextChunk = function()\\n\\t\\t{\\n\\t\\t\\tif (!this._finished && (!this._config.preview || this._rowCount < this._config.preview))\\n\\t\\t\\t\\tthis._readChunk();\\n\\t\\t}\\n\\n\\t\\tthis._readChunk = function()\\n\\t\\t{\\n\\t\\t\\tvar input = this._input;\\n\\t\\t\\tif (this._config.chunkSize)\\n\\t\\t\\t{\\n\\t\\t\\t\\tvar end = Math.min(this._start + this._config.chunkSize, this._input.size);\\n\\t\\t\\t\\tinput = slice.call(input, this._start, end);\\n\\t\\t\\t}\\n\\t\\t\\tvar txt = reader.readAsText(input, this._config.encoding);\\n\\t\\t\\tif (!usingAsyncReader)\\n\\t\\t\\t\\tthis._chunkLoaded({ target: { result: txt } });\\t// mimic the async signature\\n\\t\\t}\\n\\n\\t\\tthis._chunkLoaded = function(event)\\n\\t\\t{\\n\\t\\t\\t// Very important to increment start each time before handling results\\n\\t\\t\\tthis._start += this._config.chunkSize;\\n\\t\\t\\tthis._finished = !this._config.chunkSize || this._start >= this._input.size;\\n\\t\\t\\tthis.parseChunk(event.target.result);\\n\\t\\t}\\n\\n\\t\\tthis._chunkError = function()\\n\\t\\t{\\n\\t\\t\\tthis._sendError(reader.error.message);\\n\\t\\t}\\n\\n\\t}\\n\\tFileStreamer.prototype = Object.create(ChunkStreamer.prototype);\\n\\tFileStreamer.prototype.constructor = FileStreamer;\\n\\n\\n\\tfunction StringStreamer(config)\\n\\t{\\n\\t\\tconfig = config || {};\\n\\t\\tChunkStreamer.call(this, config);\\n\\n\\t\\tvar string;\\n\\t\\tvar remaining;\\n\\t\\tthis.stream = function(s)\\n\\t\\t{\\n\\t\\t\\tstring = s;\\n\\t\\t\\tremaining = s;\\n\\t\\t\\treturn this._nextChunk();\\n\\t\\t}\\n\\t\\tthis._nextChunk = function()\\n\\t\\t{\\n\\t\\t\\tif (this._finished) return;\\n\\t\\t\\tvar size = this._config.chunkSize;\\n\\t\\t\\tvar chunk = size ? remaining.substr(0, size) : remaining;\\n\\t\\t\\tremaining = size ? remaining.substr(size) : '';\\n\\t\\t\\tthis._finished = !remaining;\\n\\t\\t\\treturn this.parseChunk(chunk);\\n\\t\\t}\\n\\t}\\n\\tStringStreamer.prototype = Object.create(StringStreamer.prototype);\\n\\tStringStreamer.prototype.constructor = StringStreamer;\\n\\n\\n\\tfunction ReadableStreamStreamer(config)\\n\\t{\\n\\t\\tconfig = config || {};\\n\\n\\t\\tChunkStreamer.call(this, config);\\n\\n\\t\\tvar queue = [];\\n\\t\\tvar parseOnData = true;\\n\\n\\t\\tthis.stream = function(stream)\\n\\t\\t{\\n\\t\\t\\tthis._input = stream;\\n\\n\\t\\t\\tthis._input.on('data', this._streamData);\\n\\t\\t\\tthis._input.on('end', this._streamEnd);\\n\\t\\t\\tthis._input.on('error', this._streamError);\\n\\t\\t}\\n\\n\\t\\tthis._nextChunk = function()\\n\\t\\t{\\n\\t\\t\\tif (queue.length)\\n\\t\\t\\t{\\n\\t\\t\\t\\tthis.parseChunk(queue.shift());\\n\\t\\t\\t}\\n\\t\\t\\telse\\n\\t\\t\\t{\\n\\t\\t\\t\\tparseOnData = true;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tthis._streamData = bindFunction(function(chunk)\\n\\t\\t{\\n\\t\\t\\ttry\\n\\t\\t\\t{\\n\\t\\t\\t\\tqueue.push(typeof chunk === 'string' ? chunk : chunk.toString(this._config.encoding));\\n\\n\\t\\t\\t\\tif (parseOnData)\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\tparseOnData = false;\\n\\t\\t\\t\\t\\tthis.parseChunk(queue.shift());\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\tcatch (error)\\n\\t\\t\\t{\\n\\t\\t\\t\\tthis._streamError(error);\\n\\t\\t\\t}\\n\\t\\t}, this);\\n\\n\\t\\tthis._streamError = bindFunction(function(error)\\n\\t\\t{\\n\\t\\t\\tthis._streamCleanUp();\\n\\t\\t\\tthis._sendError(error.message);\\n\\t\\t}, this);\\n\\n\\t\\tthis._streamEnd = bindFunction(function()\\n\\t\\t{\\n\\t\\t\\tthis._streamCleanUp();\\n\\t\\t\\tthis._finished = true;\\n\\t\\t\\tthis._streamData('');\\n\\t\\t}, this);\\n\\n\\t\\tthis._streamCleanUp = bindFunction(function()\\n\\t\\t{\\n\\t\\t\\tthis._input.removeListener('data', this._streamData);\\n\\t\\t\\tthis._input.removeListener('end', this._streamEnd);\\n\\t\\t\\tthis._input.removeListener('error', this._streamError);\\n\\t\\t}, this);\\n\\t}\\n\\tReadableStreamStreamer.prototype = Object.create(ChunkStreamer.prototype);\\n\\tReadableStreamStreamer.prototype.constructor = ReadableStreamStreamer;\\n\\n\\n\\t// Use one ParserHandle per entire CSV file or string\\n\\tfunction ParserHandle(_config)\\n\\t{\\n\\t\\t// One goal is to minimize the use of regular expressions...\\n\\t\\tvar FLOAT = /^\\\\s*-?(\\\\d*\\\\.?\\\\d+|\\\\d+\\\\.?\\\\d*)(e[-+]?\\\\d+)?\\\\s*$/i;\\n\\n\\t\\tvar self = this;\\n\\t\\tvar _stepCounter = 0;\\t// Number of times step was called (number of rows parsed)\\n\\t\\tvar _input;\\t\\t\\t\\t// The input being parsed\\n\\t\\tvar _parser;\\t\\t\\t// The core parser being used\\n\\t\\tvar _paused = false;\\t// Whether we are paused or not\\n\\t\\tvar _aborted = false;\\t// Whether the parser has aborted or not\\n\\t\\tvar _delimiterError;\\t// Temporary state between delimiter detection and processing results\\n\\t\\tvar _fields = [];\\t\\t// Fields are from the header row of the input, if there is one\\n\\t\\tvar _results = {\\t\\t// The last results returned from the parser\\n\\t\\t\\tdata: [],\\n\\t\\t\\terrors: [],\\n\\t\\t\\tmeta: {}\\n\\t\\t};\\n\\n\\t\\tif (isFunction(_config.step))\\n\\t\\t{\\n\\t\\t\\tvar userStep = _config.step;\\n\\t\\t\\t_config.step = function(results)\\n\\t\\t\\t{\\n\\t\\t\\t\\t_results = results;\\n\\n\\t\\t\\t\\tif (needsHeaderRow())\\n\\t\\t\\t\\t\\tprocessResults();\\n\\t\\t\\t\\telse\\t// only call user's step function after header row\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\tprocessResults();\\n\\n\\t\\t\\t\\t\\t// It's possbile that this line was empty and there's no row here after all\\n\\t\\t\\t\\t\\tif (_results.data.length === 0)\\n\\t\\t\\t\\t\\t\\treturn;\\n\\n\\t\\t\\t\\t\\t_stepCounter += results.data.length;\\n\\t\\t\\t\\t\\tif (_config.preview && _stepCounter > _config.preview)\\n\\t\\t\\t\\t\\t\\t_parser.abort();\\n\\t\\t\\t\\t\\telse\\n\\t\\t\\t\\t\\t\\tuserStep(_results, self);\\n\\t\\t\\t\\t}\\n\\t\\t\\t};\\n\\t\\t}\\n\\n\\t\\t/**\\n\\t\\t * Parses input. Most users won't need, and shouldn't mess with, the baseIndex\\n\\t\\t * and ignoreLastRow parameters. They are used by streamers (wrapper functions)\\n\\t\\t * when an input comes in multiple chunks, like from a file.\\n\\t\\t */\\n\\t\\tthis.parse = function(input, baseIndex, ignoreLastRow)\\n\\t\\t{\\n\\t\\t\\tif (!_config.newline)\\n\\t\\t\\t\\t_config.newline = guessLineEndings(input);\\n\\n\\t\\t\\t_delimiterError = false;\\n\\t\\t\\tif (!_config.delimiter)\\n\\t\\t\\t{\\n\\t\\t\\t\\tvar delimGuess = guessDelimiter(input, _config.newline, _config.skipEmptyLines);\\n\\t\\t\\t\\tif (delimGuess.successful)\\n\\t\\t\\t\\t\\t_config.delimiter = delimGuess.bestDelimiter;\\n\\t\\t\\t\\telse\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t_delimiterError = true;\\t// add error after parsing (otherwise it would be overwritten)\\n\\t\\t\\t\\t\\t_config.delimiter = Papa.DefaultDelimiter;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\t_results.meta.delimiter = _config.delimiter;\\n\\t\\t\\t}\\n\\t\\t\\telse if(isFunction(_config.delimiter))\\n\\t\\t\\t{\\n\\t\\t\\t\\t_config.delimiter = _config.delimiter(input);\\n\\t\\t\\t\\t_results.meta.delimiter = _config.delimiter;\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar parserConfig = copy(_config);\\n\\t\\t\\tif (_config.preview && _config.header)\\n\\t\\t\\t\\tparserConfig.preview++;\\t// to compensate for header row\\n\\n\\t\\t\\t_input = input;\\n\\t\\t\\t_parser = new Parser(parserConfig);\\n\\t\\t\\t_results = _parser.parse(_input, baseIndex, ignoreLastRow);\\n\\t\\t\\tprocessResults();\\n\\t\\t\\treturn _paused ? { meta: { paused: true } } : (_results || { meta: { paused: false } });\\n\\t\\t};\\n\\n\\t\\tthis.paused = function()\\n\\t\\t{\\n\\t\\t\\treturn _paused;\\n\\t\\t};\\n\\n\\t\\tthis.pause = function()\\n\\t\\t{\\n\\t\\t\\t_paused = true;\\n\\t\\t\\t_parser.abort();\\n\\t\\t\\t_input = _input.substr(_parser.getCharIndex());\\n\\t\\t};\\n\\n\\t\\tthis.resume = function()\\n\\t\\t{\\n\\t\\t\\t_paused = false;\\n\\t\\t\\tself.streamer.parseChunk(_input);\\n\\t\\t};\\n\\n\\t\\tthis.aborted = function ()\\n\\t\\t{\\n\\t\\t\\treturn _aborted;\\n\\t\\t};\\n\\n\\t\\tthis.abort = function()\\n\\t\\t{\\n\\t\\t\\t_aborted = true;\\n\\t\\t\\t_parser.abort();\\n\\t\\t\\t_results.meta.aborted = true;\\n\\t\\t\\tif (isFunction(_config.complete))\\n\\t\\t\\t\\t_config.complete(_results);\\n\\t\\t\\t_input = '';\\n\\t\\t};\\n\\n\\t\\tfunction processResults()\\n\\t\\t{\\n\\t\\t\\tif (_results && _delimiterError)\\n\\t\\t\\t{\\n\\t\\t\\t\\taddError('Delimiter', 'UndetectableDelimiter', 'Unable to auto-detect delimiting character; defaulted to \\\\''+Papa.DefaultDelimiter+'\\\\'');\\n\\t\\t\\t\\t_delimiterError = false;\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (_config.skipEmptyLines)\\n\\t\\t\\t{\\n\\t\\t\\t\\tfor (var i = 0; i < _results.data.length; i++)\\n\\t\\t\\t\\t\\tif (_results.data[i].length === 1 && _results.data[i][0] === '')\\n\\t\\t\\t\\t\\t\\t_results.data.splice(i--, 1);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (needsHeaderRow())\\n\\t\\t\\t\\tfillHeaderFields();\\n\\n\\t\\t\\treturn applyHeaderAndDynamicTyping();\\n\\t\\t}\\n\\n\\t\\tfunction needsHeaderRow()\\n\\t\\t{\\n\\t\\t\\treturn _config.header && _fields.length === 0;\\n\\t\\t}\\n\\n\\t\\tfunction fillHeaderFields()\\n\\t\\t{\\n\\t\\t\\tif (!_results)\\n\\t\\t\\t\\treturn;\\n\\t\\t\\tfor (var i = 0; needsHeaderRow() && i < _results.data.length; i++)\\n\\t\\t\\t\\tfor (var j = 0; j < _results.data[i].length; j++)\\n\\t\\t\\t\\t\\t_fields.push(_results.data[i][j]);\\n\\t\\t\\t_results.data.splice(0, 1);\\n\\t\\t}\\n\\n\\t\\tfunction shouldApplyDynamicTyping(field) {\\n\\t\\t\\t// Cache function values to avoid calling it for each row\\n\\t\\t\\tif (_config.dynamicTypingFunction && _config.dynamicTyping[field] === undefined) {\\n\\t\\t\\t\\t_config.dynamicTyping[field] = _config.dynamicTypingFunction(field);\\n\\t\\t\\t}\\n\\t\\t\\treturn (_config.dynamicTyping[field] || _config.dynamicTyping) === true\\n\\t\\t}\\n\\n\\t\\tfunction parseDynamic(field, value)\\n\\t\\t{\\n\\t\\t\\tif (shouldApplyDynamicTyping(field))\\n\\t\\t\\t{\\n\\t\\t\\t\\tif (value === 'true' || value === 'TRUE')\\n\\t\\t\\t\\t\\treturn true;\\n\\t\\t\\t\\telse if (value === 'false' || value === 'FALSE')\\n\\t\\t\\t\\t\\treturn false;\\n\\t\\t\\t\\telse\\n\\t\\t\\t\\t\\treturn tryParseFloat(value);\\n\\t\\t\\t}\\n\\t\\t\\treturn value;\\n\\t\\t}\\n\\n\\t\\tfunction applyHeaderAndDynamicTyping()\\n\\t\\t{\\n\\t\\t\\tif (!_results || (!_config.header && !_config.dynamicTyping))\\n\\t\\t\\t\\treturn _results;\\n\\n\\t\\t\\tfor (var i = 0; i < _results.data.length; i++)\\n\\t\\t\\t{\\n\\t\\t\\t\\tvar row = _config.header ? {} : [];\\n\\n\\t\\t\\t\\tfor (var j = 0; j < _results.data[i].length; j++)\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\tvar field = j;\\n\\t\\t\\t\\t\\tvar value = _results.data[i][j];\\n\\n\\t\\t\\t\\t\\tif (_config.header)\\n\\t\\t\\t\\t\\t\\tfield = j >= _fields.length ? '__parsed_extra' : _fields[j];\\n\\n\\t\\t\\t\\t\\tvalue = parseDynamic(field, value);\\n\\n\\t\\t\\t\\t\\tif (field === '__parsed_extra')\\n\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\trow[field] = row[field] || [];\\n\\t\\t\\t\\t\\t\\trow[field].push(value);\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\telse\\n\\t\\t\\t\\t\\t\\trow[field] = value;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t_results.data[i] = row;\\n\\n\\t\\t\\t\\tif (_config.header)\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\tif (j > _fields.length)\\n\\t\\t\\t\\t\\t\\taddError('FieldMismatch', 'TooManyFields', 'Too many fields: expected ' + _fields.length + ' fields but parsed ' + j, i);\\n\\t\\t\\t\\t\\telse if (j < _fields.length)\\n\\t\\t\\t\\t\\t\\taddError('FieldMismatch', 'TooFewFields', 'Too few fields: expected ' + _fields.length + ' fields but parsed ' + j, i);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (_config.header && _results.meta)\\n\\t\\t\\t\\t_results.meta.fields = _fields;\\n\\t\\t\\treturn _results;\\n\\t\\t}\\n\\n\\t\\tfunction guessDelimiter(input, newline, skipEmptyLines)\\n\\t\\t{\\n\\t\\t\\tvar delimChoices = [',', '\\\\t', '|', ';', Papa.RECORD_SEP, Papa.UNIT_SEP];\\n\\t\\t\\tvar bestDelim, bestDelta, fieldCountPrevRow;\\n\\n\\t\\t\\tfor (var i = 0; i < delimChoices.length; i++)\\n\\t\\t\\t{\\n\\t\\t\\t\\tvar delim = delimChoices[i];\\n\\t\\t\\t\\tvar delta = 0, avgFieldCount = 0, emptyLinesCount = 0;\\n\\t\\t\\t\\tfieldCountPrevRow = undefined;\\n\\n\\t\\t\\t\\tvar preview = new Parser({\\n\\t\\t\\t\\t\\tdelimiter: delim,\\n\\t\\t\\t\\t\\tnewline: newline,\\n\\t\\t\\t\\t\\tpreview: 10\\n\\t\\t\\t\\t}).parse(input);\\n\\n\\t\\t\\t\\tfor (var j = 0; j < preview.data.length; j++)\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\tif (skipEmptyLines && preview.data[j].length === 1 && preview.data[j][0].length === 0) {\\n\\t\\t\\t\\t\\t\\temptyLinesCount++\\n\\t\\t\\t\\t\\t\\tcontinue\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\tvar fieldCount = preview.data[j].length;\\n\\t\\t\\t\\t\\tavgFieldCount += fieldCount;\\n\\n\\t\\t\\t\\t\\tif (typeof fieldCountPrevRow === 'undefined')\\n\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\tfieldCountPrevRow = fieldCount;\\n\\t\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\telse if (fieldCount > 1)\\n\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\tdelta += Math.abs(fieldCount - fieldCountPrevRow);\\n\\t\\t\\t\\t\\t\\tfieldCountPrevRow = fieldCount;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif (preview.data.length > 0)\\n\\t\\t\\t\\t\\tavgFieldCount /= (preview.data.length - emptyLinesCount);\\n\\n\\t\\t\\t\\tif ((typeof bestDelta === 'undefined' || delta < bestDelta)\\n\\t\\t\\t\\t\\t&& avgFieldCount > 1.99)\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\tbestDelta = delta;\\n\\t\\t\\t\\t\\tbestDelim = delim;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\t_config.delimiter = bestDelim;\\n\\n\\t\\t\\treturn {\\n\\t\\t\\t\\tsuccessful: !!bestDelim,\\n\\t\\t\\t\\tbestDelimiter: bestDelim\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tfunction guessLineEndings(input)\\n\\t\\t{\\n\\t\\t\\tinput = input.substr(0, 1024*1024);\\t// max length 1 MB\\n\\n\\t\\t\\tvar r = input.split('\\\\r');\\n\\n\\t\\t\\tvar n = input.split('\\\\n');\\n\\n\\t\\t\\tvar nAppearsFirst = (n.length > 1 && n[0].length < r[0].length);\\n\\n\\t\\t\\tif (r.length === 1 || nAppearsFirst)\\n\\t\\t\\t\\treturn '\\\\n';\\n\\n\\t\\t\\tvar numWithN = 0;\\n\\t\\t\\tfor (var i = 0; i < r.length; i++)\\n\\t\\t\\t{\\n\\t\\t\\t\\tif (r[i][0] === '\\\\n')\\n\\t\\t\\t\\t\\tnumWithN++;\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn numWithN >= r.length / 2 ? '\\\\r\\\\n' : '\\\\r';\\n\\t\\t}\\n\\n\\t\\tfunction tryParseFloat(val)\\n\\t\\t{\\n\\t\\t\\tvar isNumber = FLOAT.test(val);\\n\\t\\t\\treturn isNumber ? parseFloat(val) : val;\\n\\t\\t}\\n\\n\\t\\tfunction addError(type, code, msg, row)\\n\\t\\t{\\n\\t\\t\\t_results.errors.push({\\n\\t\\t\\t\\ttype: type,\\n\\t\\t\\t\\tcode: code,\\n\\t\\t\\t\\tmessage: msg,\\n\\t\\t\\t\\trow: row\\n\\t\\t\\t});\\n\\t\\t}\\n\\t}\\n\\n\\n\\n\\n\\n\\t/** The core parser implements speedy and correct CSV parsing */\\n\\tfunction Parser(config)\\n\\t{\\n\\t\\t// Unpack the config object\\n\\t\\tconfig = config || {};\\n\\t\\tvar delim = config.delimiter;\\n\\t\\tvar newline = config.newline;\\n\\t\\tvar comments = config.comments;\\n\\t\\tvar step = config.step;\\n\\t\\tvar preview = config.preview;\\n\\t\\tvar fastMode = config.fastMode;\\n\\t\\t/** Allows for no quoteChar by setting quoteChar to undefined in config */\\n\\t\\tif (config.quoteChar === undefined){\\n\\t\\t\\tvar quoteChar = '\\\"';\\n\\t\\t} else {\\n\\t\\t\\tvar quoteChar = config.quoteChar;\\n\\t\\t}\\n\\n\\t\\t// Delimiter must be valid\\n\\t\\tif (typeof delim !== 'string'\\n\\t\\t\\t|| Papa.BAD_DELIMITERS.indexOf(delim) > -1)\\n\\t\\t\\tdelim = ',';\\n\\n\\t\\t// Comment character must be valid\\n\\t\\tif (comments === delim)\\n\\t\\t\\tthrow 'Comment character same as delimiter';\\n\\t\\telse if (comments === true)\\n\\t\\t\\tcomments = '#';\\n\\t\\telse if (typeof comments !== 'string'\\n\\t\\t\\t|| Papa.BAD_DELIMITERS.indexOf(comments) > -1)\\n\\t\\t\\tcomments = false;\\n\\n\\t\\t// Newline must be valid: \\\\r, \\\\n, or \\\\r\\\\n\\n\\t\\tif (newline != '\\\\n' && newline != '\\\\r' && newline != '\\\\r\\\\n')\\n\\t\\t\\tnewline = '\\\\n';\\n\\n\\t\\t// We're gonna need these at the Parser scope\\n\\t\\tvar cursor = 0;\\n\\t\\tvar aborted = false;\\n\\n\\t\\tthis.parse = function(input, baseIndex, ignoreLastRow)\\n\\t\\t{\\n\\t\\t\\t// For some reason, in Chrome, this speeds things up (!?)\\n\\t\\t\\tif (typeof input !== 'string')\\n\\t\\t\\t\\tthrow 'Input must be a string';\\n\\n\\t\\t\\t// We don't need to compute some of these every time parse() is called,\\n\\t\\t\\t// but having them in a more local scope seems to perform better\\n\\t\\t\\tvar inputLen = input.length,\\n\\t\\t\\t\\tdelimLen = delim.length,\\n\\t\\t\\t\\tnewlineLen = newline.length,\\n\\t\\t\\t\\tcommentsLen = comments.length;\\n\\t\\t\\tvar stepIsFunction = isFunction(step);\\n\\n\\t\\t\\t// Establish starting state\\n\\t\\t\\tcursor = 0;\\n\\t\\t\\tvar data = [], errors = [], row = [], lastCursor = 0;\\n\\n\\t\\t\\tif (!input)\\n\\t\\t\\t\\treturn returnable();\\n\\n\\t\\t\\tif (fastMode || (fastMode !== false && input.indexOf(quoteChar) === -1))\\n\\t\\t\\t{\\n\\t\\t\\t\\tvar rows = input.split(newline);\\n\\t\\t\\t\\tfor (var i = 0; i < rows.length; i++)\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\tvar row = rows[i];\\n\\t\\t\\t\\t\\tcursor += row.length;\\n\\t\\t\\t\\t\\tif (i !== rows.length - 1)\\n\\t\\t\\t\\t\\t\\tcursor += newline.length;\\n\\t\\t\\t\\t\\telse if (ignoreLastRow)\\n\\t\\t\\t\\t\\t\\treturn returnable();\\n\\t\\t\\t\\t\\tif (comments && row.substr(0, commentsLen) === comments)\\n\\t\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t\\tif (stepIsFunction)\\n\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\tdata = [];\\n\\t\\t\\t\\t\\t\\tpushRow(row.split(delim));\\n\\t\\t\\t\\t\\t\\tdoStep();\\n\\t\\t\\t\\t\\t\\tif (aborted)\\n\\t\\t\\t\\t\\t\\t\\treturn returnable();\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\telse\\n\\t\\t\\t\\t\\t\\tpushRow(row.split(delim));\\n\\t\\t\\t\\t\\tif (preview && i >= preview)\\n\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\tdata = data.slice(0, preview);\\n\\t\\t\\t\\t\\t\\treturn returnable(true);\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\treturn returnable();\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar nextDelim = input.indexOf(delim, cursor);\\n\\t\\t\\tvar nextNewline = input.indexOf(newline, cursor);\\n\\t\\t\\tvar quoteCharRegex = new RegExp(quoteChar+quoteChar, 'g');\\n\\n\\t\\t\\t// Parser loop\\n\\t\\t\\tfor (;;)\\n\\t\\t\\t{\\n\\t\\t\\t\\t// Field has opening quote\\n\\t\\t\\t\\tif (input[cursor] === quoteChar)\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t// Start our search for the closing quote where the cursor is\\n\\t\\t\\t\\t\\tvar quoteSearch = cursor;\\n\\n\\t\\t\\t\\t\\t// Skip the opening quote\\n\\t\\t\\t\\t\\tcursor++;\\n\\n\\t\\t\\t\\t\\tfor (;;)\\n\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t// Find closing quote\\n\\t\\t\\t\\t\\t\\tvar quoteSearch = input.indexOf(quoteChar, quoteSearch+1);\\n\\n\\t\\t\\t\\t\\t\\t//No other quotes are found - no other delimiters\\n\\t\\t\\t\\t\\t\\tif (quoteSearch === -1)\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\tif (!ignoreLastRow) {\\n\\t\\t\\t\\t\\t\\t\\t\\t// No closing quote... what a pity\\n\\t\\t\\t\\t\\t\\t\\t\\terrors.push({\\n\\t\\t\\t\\t\\t\\t\\t\\t\\ttype: 'Quotes',\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tcode: 'MissingQuotes',\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tmessage: 'Quoted field unterminated',\\n\\t\\t\\t\\t\\t\\t\\t\\t\\trow: data.length,\\t// row has yet to be inserted\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tindex: cursor\\n\\t\\t\\t\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\treturn finish();\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t// Closing quote at EOF\\n\\t\\t\\t\\t\\t\\tif (quoteSearch === inputLen-1)\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\tvar value = input.substring(cursor, quoteSearch).replace(quoteCharRegex, quoteChar);\\n\\t\\t\\t\\t\\t\\t\\treturn finish(value);\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t// If this quote is escaped, it's part of the data; skip it\\n\\t\\t\\t\\t\\t\\tif (input[quoteSearch+1] === quoteChar)\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\tquoteSearch++;\\n\\t\\t\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t// Closing quote followed by delimiter\\n\\t\\t\\t\\t\\t\\tif (input[quoteSearch+1] === delim)\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\trow.push(input.substring(cursor, quoteSearch).replace(quoteCharRegex, quoteChar));\\n\\t\\t\\t\\t\\t\\t\\tcursor = quoteSearch + 1 + delimLen;\\n\\t\\t\\t\\t\\t\\t\\tnextDelim = input.indexOf(delim, cursor);\\n\\t\\t\\t\\t\\t\\t\\tnextNewline = input.indexOf(newline, cursor);\\n\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t// Closing quote followed by newline\\n\\t\\t\\t\\t\\t\\tif (input.substr(quoteSearch+1, newlineLen) === newline)\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\trow.push(input.substring(cursor, quoteSearch).replace(quoteCharRegex, quoteChar));\\n\\t\\t\\t\\t\\t\\t\\tsaveRow(quoteSearch + 1 + newlineLen);\\n\\t\\t\\t\\t\\t\\t\\tnextDelim = input.indexOf(delim, cursor);\\t// because we may have skipped the nextDelim in the quoted field\\n\\n\\t\\t\\t\\t\\t\\t\\tif (stepIsFunction)\\n\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\tdoStep();\\n\\t\\t\\t\\t\\t\\t\\t\\tif (aborted)\\n\\t\\t\\t\\t\\t\\t\\t\\t\\treturn returnable();\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t\\tif (preview && data.length >= preview)\\n\\t\\t\\t\\t\\t\\t\\t\\treturn returnable(true);\\n\\n\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\n\\t\\t\\t\\t\\t\\t// Checks for valid closing quotes are complete (escaped quotes or quote followed by EOF/delimiter/newline) -- assume these quotes are part of an invalid text string\\n\\t\\t\\t\\t\\t\\terrors.push({\\n\\t\\t\\t\\t\\t\\t\\ttype: 'Quotes',\\n\\t\\t\\t\\t\\t\\t\\tcode: 'InvalidQuotes',\\n\\t\\t\\t\\t\\t\\t\\tmessage: 'Trailing quote on quoted field is malformed',\\n\\t\\t\\t\\t\\t\\t\\trow: data.length,\\t// row has yet to be inserted\\n\\t\\t\\t\\t\\t\\t\\tindex: cursor\\n\\t\\t\\t\\t\\t\\t});\\n\\n\\t\\t\\t\\t\\t\\tquoteSearch++;\\n\\t\\t\\t\\t\\t\\tcontinue;\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// Comment found at start of new line\\n\\t\\t\\t\\tif (comments && row.length === 0 && input.substr(cursor, commentsLen) === comments)\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\tif (nextNewline === -1)\\t// Comment ends at EOF\\n\\t\\t\\t\\t\\t\\treturn returnable();\\n\\t\\t\\t\\t\\tcursor = nextNewline + newlineLen;\\n\\t\\t\\t\\t\\tnextNewline = input.indexOf(newline, cursor);\\n\\t\\t\\t\\t\\tnextDelim = input.indexOf(delim, cursor);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// Next delimiter comes before next newline, so we've reached end of field\\n\\t\\t\\t\\tif (nextDelim !== -1 && (nextDelim < nextNewline || nextNewline === -1))\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\trow.push(input.substring(cursor, nextDelim));\\n\\t\\t\\t\\t\\tcursor = nextDelim + delimLen;\\n\\t\\t\\t\\t\\tnextDelim = input.indexOf(delim, cursor);\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// End of row\\n\\t\\t\\t\\tif (nextNewline !== -1)\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\trow.push(input.substring(cursor, nextNewline));\\n\\t\\t\\t\\t\\tsaveRow(nextNewline + newlineLen);\\n\\n\\t\\t\\t\\t\\tif (stepIsFunction)\\n\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\tdoStep();\\n\\t\\t\\t\\t\\t\\tif (aborted)\\n\\t\\t\\t\\t\\t\\t\\treturn returnable();\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tif (preview && data.length >= preview)\\n\\t\\t\\t\\t\\t\\treturn returnable(true);\\n\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tbreak;\\n\\t\\t\\t}\\n\\n\\n\\t\\t\\treturn finish();\\n\\n\\n\\t\\t\\tfunction pushRow(row)\\n\\t\\t\\t{\\n\\t\\t\\t\\tdata.push(row);\\n\\t\\t\\t\\tlastCursor = cursor;\\n\\t\\t\\t}\\n\\n\\t\\t\\t/**\\n\\t\\t\\t * Appends the remaining input from cursor to the end into\\n\\t\\t\\t * row, saves the row, calls step, and returns the results.\\n\\t\\t\\t */\\n\\t\\t\\tfunction finish(value)\\n\\t\\t\\t{\\n\\t\\t\\t\\tif (ignoreLastRow)\\n\\t\\t\\t\\t\\treturn returnable();\\n\\t\\t\\t\\tif (typeof value === 'undefined')\\n\\t\\t\\t\\t\\tvalue = input.substr(cursor);\\n\\t\\t\\t\\trow.push(value);\\n\\t\\t\\t\\tcursor = inputLen;\\t// important in case parsing is paused\\n\\t\\t\\t\\tpushRow(row);\\n\\t\\t\\t\\tif (stepIsFunction)\\n\\t\\t\\t\\t\\tdoStep();\\n\\t\\t\\t\\treturn returnable();\\n\\t\\t\\t}\\n\\n\\t\\t\\t/**\\n\\t\\t\\t * Appends the current row to the results. It sets the cursor\\n\\t\\t\\t * to newCursor and finds the nextNewline. The caller should\\n\\t\\t\\t * take care to execute user's step function and check for\\n\\t\\t\\t * preview and end parsing if necessary.\\n\\t\\t\\t */\\n\\t\\t\\tfunction saveRow(newCursor)\\n\\t\\t\\t{\\n\\t\\t\\t\\tcursor = newCursor;\\n\\t\\t\\t\\tpushRow(row);\\n\\t\\t\\t\\trow = [];\\n\\t\\t\\t\\tnextNewline = input.indexOf(newline, cursor);\\n\\t\\t\\t}\\n\\n\\t\\t\\t/** Returns an object with the results, errors, and meta. */\\n\\t\\t\\tfunction returnable(stopped)\\n\\t\\t\\t{\\n\\t\\t\\t\\treturn {\\n\\t\\t\\t\\t\\tdata: data,\\n\\t\\t\\t\\t\\terrors: errors,\\n\\t\\t\\t\\t\\tmeta: {\\n\\t\\t\\t\\t\\t\\tdelimiter: delim,\\n\\t\\t\\t\\t\\t\\tlinebreak: newline,\\n\\t\\t\\t\\t\\t\\taborted: aborted,\\n\\t\\t\\t\\t\\t\\ttruncated: !!stopped,\\n\\t\\t\\t\\t\\t\\tcursor: lastCursor + (baseIndex || 0)\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t};\\n\\t\\t\\t}\\n\\n\\t\\t\\t/** Executes the user's step function and resets data & errors. */\\n\\t\\t\\tfunction doStep()\\n\\t\\t\\t{\\n\\t\\t\\t\\tstep(returnable());\\n\\t\\t\\t\\tdata = [], errors = [];\\n\\t\\t\\t}\\n\\t\\t};\\n\\n\\t\\t/** Sets the abort flag */\\n\\t\\tthis.abort = function()\\n\\t\\t{\\n\\t\\t\\taborted = true;\\n\\t\\t};\\n\\n\\t\\t/** Gets the cursor position */\\n\\t\\tthis.getCharIndex = function()\\n\\t\\t{\\n\\t\\t\\treturn cursor;\\n\\t\\t};\\n\\t}\\n\\n\\n\\t// If you need to load Papa Parse asynchronously and you also need worker threads, hard-code\\n\\t// the script path here. See: https://github.com/mholt/PapaParse/issues/87#issuecomment-57885358\\n\\tfunction getScriptPath()\\n\\t{\\n\\t\\tvar scripts = document.getElementsByTagName('script');\\n\\t\\treturn scripts.length ? scripts[scripts.length - 1].src : '';\\n\\t}\\n\\n\\tfunction newWorker()\\n\\t{\\n\\t\\tif (!Papa.WORKERS_SUPPORTED)\\n\\t\\t\\treturn false;\\n\\t\\tif (!LOADED_SYNC && Papa.SCRIPT_PATH === null)\\n\\t\\t\\tthrow new Error(\\n\\t\\t\\t\\t'Script path cannot be determined automatically when Papa Parse is loaded asynchronously. ' +\\n\\t\\t\\t\\t'You need to set Papa.SCRIPT_PATH manually.'\\n\\t\\t\\t);\\n\\t\\tvar workerUrl = Papa.SCRIPT_PATH || AUTO_SCRIPT_PATH;\\n\\t\\t// Append 'papaworker' to the search string to tell papaparse that this is our worker.\\n\\t\\tworkerUrl += (workerUrl.indexOf('?') !== -1 ? '&' : '?') + 'papaworker';\\n\\t\\tvar w = new global.Worker(workerUrl);\\n\\t\\tw.onmessage = mainThreadReceivedMessage;\\n\\t\\tw.id = workerIdCounter++;\\n\\t\\tworkers[w.id] = w;\\n\\t\\treturn w;\\n\\t}\\n\\n\\t/** Callback when main thread receives a message */\\n\\tfunction mainThreadReceivedMessage(e)\\n\\t{\\n\\t\\tvar msg = e.data;\\n\\t\\tvar worker = workers[msg.workerId];\\n\\t\\tvar aborted = false;\\n\\n\\t\\tif (msg.error)\\n\\t\\t\\tworker.userError(msg.error, msg.file);\\n\\t\\telse if (msg.results && msg.results.data)\\n\\t\\t{\\n\\t\\t\\tvar abort = function() {\\n\\t\\t\\t\\taborted = true;\\n\\t\\t\\t\\tcompleteWorker(msg.workerId, { data: [], errors: [], meta: { aborted: true } });\\n\\t\\t\\t};\\n\\n\\t\\t\\tvar handle = {\\n\\t\\t\\t\\tabort: abort,\\n\\t\\t\\t\\tpause: notImplemented,\\n\\t\\t\\t\\tresume: notImplemented\\n\\t\\t\\t};\\n\\n\\t\\t\\tif (isFunction(worker.userStep))\\n\\t\\t\\t{\\n\\t\\t\\t\\tfor (var i = 0; i < msg.results.data.length; i++)\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\tworker.userStep({\\n\\t\\t\\t\\t\\t\\tdata: [msg.results.data[i]],\\n\\t\\t\\t\\t\\t\\terrors: msg.results.errors,\\n\\t\\t\\t\\t\\t\\tmeta: msg.results.meta\\n\\t\\t\\t\\t\\t}, handle);\\n\\t\\t\\t\\t\\tif (aborted)\\n\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tdelete msg.results;\\t// free memory ASAP\\n\\t\\t\\t}\\n\\t\\t\\telse if (isFunction(worker.userChunk))\\n\\t\\t\\t{\\n\\t\\t\\t\\tworker.userChunk(msg.results, handle, msg.file);\\n\\t\\t\\t\\tdelete msg.results;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tif (msg.finished && !aborted)\\n\\t\\t\\tcompleteWorker(msg.workerId, msg.results);\\n\\t}\\n\\n\\tfunction completeWorker(workerId, results) {\\n\\t\\tvar worker = workers[workerId];\\n\\t\\tif (isFunction(worker.userComplete))\\n\\t\\t\\tworker.userComplete(results);\\n\\t\\tworker.terminate();\\n\\t\\tdelete workers[workerId];\\n\\t}\\n\\n\\tfunction notImplemented() {\\n\\t\\tthrow 'Not implemented.';\\n\\t}\\n\\n\\t/** Callback when worker thread receives a message */\\n\\tfunction workerThreadReceivedMessage(e)\\n\\t{\\n\\t\\tvar msg = e.data;\\n\\n\\t\\tif (typeof Papa.WORKER_ID === 'undefined' && msg)\\n\\t\\t\\tPapa.WORKER_ID = msg.workerId;\\n\\n\\t\\tif (typeof msg.input === 'string')\\n\\t\\t{\\n\\t\\t\\tglobal.postMessage({\\n\\t\\t\\t\\tworkerId: Papa.WORKER_ID,\\n\\t\\t\\t\\tresults: Papa.parse(msg.input, msg.config),\\n\\t\\t\\t\\tfinished: true\\n\\t\\t\\t});\\n\\t\\t}\\n\\t\\telse if ((global.File && msg.input instanceof File) || msg.input instanceof Object)\\t// thank you, Safari (see issue #106)\\n\\t\\t{\\n\\t\\t\\tvar results = Papa.parse(msg.input, msg.config);\\n\\t\\t\\tif (results)\\n\\t\\t\\t\\tglobal.postMessage({\\n\\t\\t\\t\\t\\tworkerId: Papa.WORKER_ID,\\n\\t\\t\\t\\t\\tresults: results,\\n\\t\\t\\t\\t\\tfinished: true\\n\\t\\t\\t\\t});\\n\\t\\t}\\n\\t}\\n\\n\\t/** Makes a deep copy of an array or object (mostly) */\\n\\tfunction copy(obj)\\n\\t{\\n\\t\\tif (typeof obj !== 'object')\\n\\t\\t\\treturn obj;\\n\\t\\tvar cpy = obj instanceof Array ? [] : {};\\n\\t\\tfor (var key in obj)\\n\\t\\t\\tcpy[key] = copy(obj[key]);\\n\\t\\treturn cpy;\\n\\t}\\n\\n\\tfunction bindFunction(f, self)\\n\\t{\\n\\t\\treturn function() { f.apply(self, arguments); };\\n\\t}\\n\\n\\tfunction isFunction(func)\\n\\t{\\n\\t\\treturn typeof func === 'function';\\n\\t}\\n\\n\\treturn Papa;\\n}));\\n\",\"import CSVProcessor from './utilities/CSVProcessor.js';\\nimport * as sensi_grid_config from './model/default-config.js';\\nimport CustomEvent from './events/event.js';\\n\\nexport default class SensiGrid {\\n\\n    constructor (width, height, data) {\\n        let gc = sensi_grid_config.grid_config,\\n            csv;\\n\\n        this.width = gc.width = width ? width : gc.width;\\n        this.height = gc.height = height ? height : gc.height;\\n        //create an instance level event object for all\\n        //custom events bound to this instnace's scope\\n        this.gridEvent = new CustomEvent();\\n\\n        // if data is available initiate data loading\\n        if(data !== undefined) {\\n            csv = new CSVProcessor(data);\\n            //listen for the data parsing complete event\\n            csv.addEventListener('dataParsed', function(json){\\n                console.log(\\\"EVENT FIRED AND LISTENED\\\")\\n                console.log(json);\\n            });\\n        }\\n    }\\n\\n}\\n\\n//loadCSV();\"]}","code":"!function(e,t){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(\"SensiGrid\",[],t):\"object\"==typeof exports?exports.SensiGrid=t():e.SensiGrid=t()}(window,function(){return function(e){var t={};function n(r){if(t[r])return t[r].exports;var i=t[r]={i:r,l:!1,exports:{}};return e[r].call(i.exports,i,i.exports,n),i.l=!0,i.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:r})},n.r=function(e){Object.defineProperty(e,\"__esModule\",{value:!0})},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,\"a\",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p=\"\",n(n.s=6)}([function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var r,i=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),s=n(2),o=(r=s)&&r.__esModule?r:{default:r};var a=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t),function(e,t){if(!e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!t||\"object\"!=typeof t&&\"function\"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this))}return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.default),i(t,[{key:\"addEventListener\",value:function(e,t){this.on(e,function(){var e=arguments;t.apply(this,e)})}}]),t}();t.default=a,e.exports=t.default},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.default={grid_config:{width:600,height:400}},e.exports=t.default},function(e,t,n){\"use strict\";var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}();var i={emitDelay:10,strictMode:!1},s=function(){function e(){var t=arguments.length<=0||void 0===arguments[0]?i:arguments[0];!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e);var n=void 0,r=void 0;n=t.hasOwnProperty(\"emitDelay\")?t.emitDelay:i.emitDelay,this._emitDelay=n,r=t.hasOwnProperty(\"strictMode\")?t.strictMode:i.strictMode,this._strictMode=r,this._listeners={},this.events=[]}return r(e,[{key:\"_addListenner\",value:function(e,t,n){if(\"function\"!=typeof t)throw TypeError(\"listener must be a function\");-1===this.events.indexOf(e)?(this._listeners[e]=[{once:n,fn:t}],this.events.push(e)):this._listeners[e].push({once:n,fn:t})}},{key:\"on\",value:function(e,t){this._addListenner(e,t,!1)}},{key:\"once\",value:function(e,t){this._addListenner(e,t,!0)}},{key:\"off\",value:function(e,t){var n,r,i=this,s=this.events.indexOf(e);e&&-1!==s&&(t?(n=[],(r=i._listeners[e]).forEach(function(e,r){e.fn===t&&n.unshift(r)}),n.forEach(function(e){r.splice(e,1)}),r.length||(i.events.splice(s,1),delete i._listeners[e])):(delete this._listeners[e],this.events.splice(s,1)))}},{key:\"_applyEvents\",value:function(e,t){var n=this._listeners[e];if(n&&n.length){var r=[];n.forEach(function(e,n){e.fn.apply(null,t),e.once&&r.unshift(n)}),r.forEach(function(e){n.splice(e,1)})}else if(this._strictMode)throw\"No listeners specified for event: \"+e}},{key:\"emit\",value:function(e){for(var t=this,n=arguments.length,r=Array(n>1?n-1:0),i=1;i<n;i++)r[i-1]=arguments[i];this._emitDelay?setTimeout(function(){t._applyEvents.call(t,e,r)},this._emitDelay):this._applyEvents(e,r)}},{key:\"emitSync\",value:function(e){for(var t=arguments.length,n=Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];this._applyEvents(e,n)}},{key:\"destroy\",value:function(){this._listeners={},this.events=[]}}]),e}();e.exports=s},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=a(n(4)),s=n(!function(){var e=new Error('Cannot find module \"./utilities/helpers.js\"');throw e.code=\"MODULE_NOT_FOUND\",e}()),o=a(n(!function(){var e=new Error('Cannot find module \"./events/event.js\"');throw e.code=\"MODULE_NOT_FOUND\",e}()));function a(e){return e&&e.__esModule?e:{default:e}}var u=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!t||\"object\"!=typeof t&&\"function\"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this));return n.data_config={},e&&(n.data_config.rawData=e,\"URL\"===function(e){return(0,s.checkURLPattern)(e)?\"URL\":\"String\"}(e)?n.data_config.rawDataIsURL=!0:n.data_config.rawDataIsURL=!1,n.parseCSVtoJSON()),n}return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.default),r(t,[{key:\"parseCSVtoJSON\",value:function(){var e=this,t=this.data_config,n=t&&t.rawData,r=t&&t.rawDataIsURL,s=void 0;i.default.parse(n,{download:r,complete:function(t){s=t,console.log(s),e.emit(\"dataParsed\",s)},error:function(e,t){console.log(\"ERROR: Error in loading the file : \"+t)}})}}]),t}();t.default=u,e.exports=t.default},function(e,t,n){var r,i,s;\n/*!\n\tPapa Parse\n\tv4.3.7\n\thttps://github.com/mholt/PapaParse\n\tLicense: MIT\n*/i=[],void 0===(s=\"function\"==typeof(r=function(){\"use strict\";var e,t,n=\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:void 0!==n?n:{},r=!n.document&&!!n.postMessage,i=r&&/(\\?|&)papaworker(=|&|$)/.test(n.location.search),s=!1,o={},a=0,u={parse:function(t,r){var i=(r=r||{}).dynamicTyping||!1;if(k(i)&&(r.dynamicTypingFunction=i,i={}),r.dynamicTyping=i,r.worker&&u.WORKERS_SUPPORTED){var f=function(){if(!u.WORKERS_SUPPORTED)return!1;if(!s&&null===u.SCRIPT_PATH)throw new Error(\"Script path cannot be determined automatically when Papa Parse is loaded asynchronously. You need to set Papa.SCRIPT_PATH manually.\");var t=u.SCRIPT_PATH||e;t+=(-1!==t.indexOf(\"?\")?\"&\":\"?\")+\"papaworker\";var r=new n.Worker(t);return r.onmessage=v,r.id=a++,o[r.id]=r,r}();return f.userStep=r.step,f.userChunk=r.chunk,f.userComplete=r.complete,f.userError=r.error,r.step=k(r.step),r.chunk=k(r.chunk),r.complete=k(r.complete),r.error=k(r.error),delete r.worker,void f.postMessage({input:t,config:r,workerId:f.id})}var h=null;return\"string\"==typeof t?h=r.download?new c(r):new d(r):!0===t.readable&&k(t.read)&&k(t.on)?h=new p(r):(n.File&&t instanceof File||t instanceof Object)&&(h=new l(r)),h.stream(t)},unparse:function(e,t){var n=!1,r=!0,i=\",\",s=\"\\r\\n\",o='\"';\"object\"==typeof t&&(\"string\"==typeof t.delimiter&&1===t.delimiter.length&&-1===u.BAD_DELIMITERS.indexOf(t.delimiter)&&(i=t.delimiter),(\"boolean\"==typeof t.quotes||t.quotes instanceof Array)&&(n=t.quotes),\"string\"==typeof t.newline&&(s=t.newline),\"string\"==typeof t.quoteChar&&(o=t.quoteChar),\"boolean\"==typeof t.header&&(r=t.header));var a=new RegExp(o,\"g\");if(\"string\"==typeof e&&(e=JSON.parse(e)),e instanceof Array){if(!e.length||e[0]instanceof Array)return h(null,e);if(\"object\"==typeof e[0])return h(f(e[0]),e)}else if(\"object\"==typeof e)return\"string\"==typeof e.data&&(e.data=JSON.parse(e.data)),e.data instanceof Array&&(e.fields||(e.fields=e.meta&&e.meta.fields),e.fields||(e.fields=e.data[0]instanceof Array?e.fields:f(e.data[0])),e.data[0]instanceof Array||\"object\"==typeof e.data[0]||(e.data=[e.data])),h(e.fields||[],e.data||[]);throw\"exception: Unable to serialize unrecognized input\";function f(e){if(\"object\"!=typeof e)return[];var t=[];for(var n in e)t.push(n);return t}function h(e,t){var n=\"\";\"string\"==typeof e&&(e=JSON.parse(e)),\"string\"==typeof t&&(t=JSON.parse(t));var o=e instanceof Array&&e.length>0,a=!(t[0]instanceof Array);if(o&&r){for(var u=0;u<e.length;u++)u>0&&(n+=i),n+=c(e[u],u);t.length>0&&(n+=s)}for(var f=0;f<t.length;f++){for(var h=o?e.length:t[f].length,l=0;l<h;l++){l>0&&(n+=i);var d=o&&a?e[l]:l;n+=c(t[f][d],l)}f<t.length-1&&(n+=s)}return n}function c(e,t){if(void 0===e||null===e)return\"\";e=e.toString().replace(a,o+o);var r=\"boolean\"==typeof n&&n||n instanceof Array&&n[t]||function(e,t){for(var n=0;n<t.length;n++)if(e.indexOf(t[n])>-1)return!0;return!1}(e,u.BAD_DELIMITERS)||e.indexOf(i)>-1||\" \"===e.charAt(0)||\" \"===e.charAt(e.length-1);return r?o+e+o:e}}};if(u.RECORD_SEP=String.fromCharCode(30),u.UNIT_SEP=String.fromCharCode(31),u.BYTE_ORDER_MARK=\"\\ufeff\",u.BAD_DELIMITERS=[\"\\r\",\"\\n\",'\"',u.BYTE_ORDER_MARK],u.WORKERS_SUPPORTED=!r&&!!n.Worker,u.SCRIPT_PATH=null,u.LocalChunkSize=10485760,u.RemoteChunkSize=5242880,u.DefaultDelimiter=\",\",u.Parser=g,u.ParserHandle=_,u.NetworkStreamer=c,u.FileStreamer=l,u.StringStreamer=d,u.ReadableStreamStreamer=p,n.jQuery){var f=n.jQuery;f.fn.parse=function(e){var t=e.config||{},r=[];return this.each(function(e){var i=\"INPUT\"===f(this).prop(\"tagName\").toUpperCase()&&\"file\"===f(this).attr(\"type\").toLowerCase()&&n.FileReader;if(!i||!this.files||0===this.files.length)return!0;for(var s=0;s<this.files.length;s++)r.push({file:this.files[s],inputElem:this,instanceConfig:f.extend({},t)})}),i(),this;function i(){if(0!==r.length){var t,n,i,o,a=r[0];if(k(e.before)){var h=e.before(a.file,a.inputElem);if(\"object\"==typeof h){if(\"abort\"===h.action)return t=\"AbortError\",n=a.file,i=a.inputElem,o=h.reason,void(k(e.error)&&e.error({name:t},n,i,o));if(\"skip\"===h.action)return void s();\"object\"==typeof h.config&&(a.instanceConfig=f.extend(a.instanceConfig,h.config))}else if(\"skip\"===h)return void s()}var c=a.instanceConfig.complete;a.instanceConfig.complete=function(e){k(c)&&c(e,a.file,a.inputElem),s()},u.parse(a.file,a.instanceConfig)}else k(e.complete)&&e.complete()}function s(){r.splice(0,1),i()}}}function h(e){this._handle=null,this._paused=!1,this._finished=!1,this._input=null,this._baseIndex=0,this._partialLine=\"\",this._rowCount=0,this._start=0,this._nextChunk=null,this.isFirstChunk=!0,this._completeResults={data:[],errors:[],meta:{}},function(e){var t=b(e);t.chunkSize=parseInt(t.chunkSize),e.step||e.chunk||(t.chunkSize=null),this._handle=new _(t),this._handle.streamer=this,this._config=t}.call(this,e),this.parseChunk=function(e){if(this.isFirstChunk&&k(this._config.beforeFirstChunk)){var t=this._config.beforeFirstChunk(e);void 0!==t&&(e=t)}this.isFirstChunk=!1;var r=this._partialLine+e;this._partialLine=\"\";var s=this._handle.parse(r,this._baseIndex,!this._finished);if(!this._handle.paused()&&!this._handle.aborted()){var o=s.meta.cursor;this._finished||(this._partialLine=r.substring(o-this._baseIndex),this._baseIndex=o),s&&s.data&&(this._rowCount+=s.data.length);var a=this._finished||this._config.preview&&this._rowCount>=this._config.preview;if(i)n.postMessage({results:s,workerId:u.WORKER_ID,finished:a});else if(k(this._config.chunk)){if(this._config.chunk(s,this._handle),this._paused)return;s=void 0,this._completeResults=void 0}return this._config.step||this._config.chunk||(this._completeResults.data=this._completeResults.data.concat(s.data),this._completeResults.errors=this._completeResults.errors.concat(s.errors),this._completeResults.meta=s.meta),!a||!k(this._config.complete)||s&&s.meta.aborted||this._config.complete(this._completeResults,this._input),a||s&&s.meta.paused||this._nextChunk(),s}},this._sendError=function(e){k(this._config.error)?this._config.error(e):i&&this._config.error&&n.postMessage({workerId:u.WORKER_ID,error:e,finished:!1})}}function c(e){var t;(e=e||{}).chunkSize||(e.chunkSize=u.RemoteChunkSize),h.call(this,e),this._nextChunk=r?function(){this._readChunk(),this._chunkLoaded()}:function(){this._readChunk()},this.stream=function(e){this._input=e,this._nextChunk()},this._readChunk=function(){if(this._finished)this._chunkLoaded();else{if(t=new XMLHttpRequest,this._config.withCredentials&&(t.withCredentials=this._config.withCredentials),r||(t.onload=w(this._chunkLoaded,this),t.onerror=w(this._chunkError,this)),t.open(\"GET\",this._input,!r),this._config.downloadRequestHeaders){var e=this._config.downloadRequestHeaders;for(var n in e)t.setRequestHeader(n,e[n])}if(this._config.chunkSize){var i=this._start+this._config.chunkSize-1;t.setRequestHeader(\"Range\",\"bytes=\"+this._start+\"-\"+i),t.setRequestHeader(\"If-None-Match\",\"webkit-no-cache\")}try{t.send()}catch(e){this._chunkError(e.message)}r&&0===t.status?this._chunkError():this._start+=this._config.chunkSize}},this._chunkLoaded=function(){4==t.readyState&&(t.status<200||t.status>=400?this._chunkError():(this._finished=!this._config.chunkSize||this._start>function(e){var t=e.getResponseHeader(\"Content-Range\");return null===t?-1:parseInt(t.substr(t.lastIndexOf(\"/\")+1))}(t),this.parseChunk(t.responseText)))},this._chunkError=function(e){var n=t.statusText||e;this._sendError(n)}}function l(e){var t,n;(e=e||{}).chunkSize||(e.chunkSize=u.LocalChunkSize),h.call(this,e);var r=\"undefined\"!=typeof FileReader;this.stream=function(e){this._input=e,n=e.slice||e.webkitSlice||e.mozSlice,r?((t=new FileReader).onload=w(this._chunkLoaded,this),t.onerror=w(this._chunkError,this)):t=new FileReaderSync,this._nextChunk()},this._nextChunk=function(){this._finished||this._config.preview&&!(this._rowCount<this._config.preview)||this._readChunk()},this._readChunk=function(){var e=this._input;if(this._config.chunkSize){var i=Math.min(this._start+this._config.chunkSize,this._input.size);e=n.call(e,this._start,i)}var s=t.readAsText(e,this._config.encoding);r||this._chunkLoaded({target:{result:s}})},this._chunkLoaded=function(e){this._start+=this._config.chunkSize,this._finished=!this._config.chunkSize||this._start>=this._input.size,this.parseChunk(e.target.result)},this._chunkError=function(){this._sendError(t.error.message)}}function d(e){var t;e=e||{},h.call(this,e),this.stream=function(e){return t=e,this._nextChunk()},this._nextChunk=function(){if(!this._finished){var e=this._config.chunkSize,n=e?t.substr(0,e):t;return t=e?t.substr(e):\"\",this._finished=!t,this.parseChunk(n)}}}function p(e){e=e||{},h.call(this,e);var t=[],n=!0;this.stream=function(e){this._input=e,this._input.on(\"data\",this._streamData),this._input.on(\"end\",this._streamEnd),this._input.on(\"error\",this._streamError)},this._nextChunk=function(){t.length?this.parseChunk(t.shift()):n=!0},this._streamData=w(function(e){try{t.push(\"string\"==typeof e?e:e.toString(this._config.encoding)),n&&(n=!1,this.parseChunk(t.shift()))}catch(e){this._streamError(e)}},this),this._streamError=w(function(e){this._streamCleanUp(),this._sendError(e.message)},this),this._streamEnd=w(function(){this._streamCleanUp(),this._finished=!0,this._streamData(\"\")},this),this._streamCleanUp=w(function(){this._input.removeListener(\"data\",this._streamData),this._input.removeListener(\"end\",this._streamEnd),this._input.removeListener(\"error\",this._streamError)},this)}function _(e){var t,n,r,i=/^\\s*-?(\\d*\\.?\\d+|\\d+\\.?\\d*)(e[-+]?\\d+)?\\s*$/i,s=this,o=0,a=!1,f=!1,h=[],c={data:[],errors:[],meta:{}};if(k(e.step)){var l=e.step;e.step=function(t){if(c=t,p())d();else{if(d(),0===c.data.length)return;o+=t.data.length,e.preview&&o>e.preview?n.abort():l(c,s)}}}function d(){if(c&&r&&(v(\"Delimiter\",\"UndetectableDelimiter\",\"Unable to auto-detect delimiting character; defaulted to '\"+u.DefaultDelimiter+\"'\"),r=!1),e.skipEmptyLines)for(var t=0;t<c.data.length;t++)1===c.data[t].length&&\"\"===c.data[t][0]&&c.data.splice(t--,1);return p()&&function(){if(c){for(var e=0;p()&&e<c.data.length;e++)for(var t=0;t<c.data[e].length;t++)h.push(c.data[e][t]);c.data.splice(0,1)}}(),function(){if(!c||!e.header&&!e.dynamicTyping)return c;for(var t=0;t<c.data.length;t++){for(var n=e.header?{}:[],r=0;r<c.data[t].length;r++){var i=r,s=c.data[t][r];e.header&&(i=r>=h.length?\"__parsed_extra\":h[r]),s=_(i,s),\"__parsed_extra\"===i?(n[i]=n[i]||[],n[i].push(s)):n[i]=s}c.data[t]=n,e.header&&(r>h.length?v(\"FieldMismatch\",\"TooManyFields\",\"Too many fields: expected \"+h.length+\" fields but parsed \"+r,t):r<h.length&&v(\"FieldMismatch\",\"TooFewFields\",\"Too few fields: expected \"+h.length+\" fields but parsed \"+r,t))}return e.header&&c.meta&&(c.meta.fields=h),c}()}function p(){return e.header&&0===h.length}function _(t,n){return function(t){return e.dynamicTypingFunction&&void 0===e.dynamicTyping[t]&&(e.dynamicTyping[t]=e.dynamicTypingFunction(t)),!0===(e.dynamicTyping[t]||e.dynamicTyping)}(t)?\"true\"===n||\"TRUE\"===n||\"false\"!==n&&\"FALSE\"!==n&&(r=n,i.test(r)?parseFloat(r):r):n;var r}function v(e,t,n,r){c.errors.push({type:e,code:t,message:n,row:r})}this.parse=function(i,s,o){if(e.newline||(e.newline=function(e){var t=(e=e.substr(0,1048576)).split(\"\\r\"),n=e.split(\"\\n\"),r=n.length>1&&n[0].length<t[0].length;if(1===t.length||r)return\"\\n\";for(var i=0,s=0;s<t.length;s++)\"\\n\"===t[s][0]&&i++;return i>=t.length/2?\"\\r\\n\":\"\\r\"}(i)),r=!1,e.delimiter)k(e.delimiter)&&(e.delimiter=e.delimiter(i),c.meta.delimiter=e.delimiter);else{var f=function(t,n,r){for(var i,s,o,a=[\",\",\"\\t\",\"|\",\";\",u.RECORD_SEP,u.UNIT_SEP],f=0;f<a.length;f++){var h=a[f],c=0,l=0,d=0;o=void 0;for(var p=new g({delimiter:h,newline:n,preview:10}).parse(t),_=0;_<p.data.length;_++)if(r&&1===p.data[_].length&&0===p.data[_][0].length)d++;else{var v=p.data[_].length;l+=v,void 0!==o?v>1&&(c+=Math.abs(v-o),o=v):o=v}p.data.length>0&&(l/=p.data.length-d),(void 0===s||c<s)&&l>1.99&&(s=c,i=h)}return e.delimiter=i,{successful:!!i,bestDelimiter:i}}(i,e.newline,e.skipEmptyLines);f.successful?e.delimiter=f.bestDelimiter:(r=!0,e.delimiter=u.DefaultDelimiter),c.meta.delimiter=e.delimiter}var h=b(e);return e.preview&&e.header&&h.preview++,t=i,n=new g(h),c=n.parse(t,s,o),d(),a?{meta:{paused:!0}}:c||{meta:{paused:!1}}},this.paused=function(){return a},this.pause=function(){a=!0,n.abort(),t=t.substr(n.getCharIndex())},this.resume=function(){a=!1,s.streamer.parseChunk(t)},this.aborted=function(){return f},this.abort=function(){f=!0,n.abort(),c.meta.aborted=!0,k(e.complete)&&e.complete(c),t=\"\"}}function g(e){var t=(e=e||{}).delimiter,n=e.newline,r=e.comments,i=e.step,s=e.preview,o=e.fastMode;if(void 0===e.quoteChar)var a='\"';else var a=e.quoteChar;if((\"string\"!=typeof t||u.BAD_DELIMITERS.indexOf(t)>-1)&&(t=\",\"),r===t)throw\"Comment character same as delimiter\";!0===r?r=\"#\":(\"string\"!=typeof r||u.BAD_DELIMITERS.indexOf(r)>-1)&&(r=!1),\"\\n\"!=n&&\"\\r\"!=n&&\"\\r\\n\"!=n&&(n=\"\\n\");var f=0,h=!1;this.parse=function(e,u,c){if(\"string\"!=typeof e)throw\"Input must be a string\";var l=e.length,d=t.length,p=n.length,_=r.length,g=k(i);f=0;var v=[],m=[],y=[],b=0;if(!e)return P();if(o||!1!==o&&-1===e.indexOf(a)){for(var w=e.split(n),E=0;E<w.length;E++){var y=w[E];if(f+=y.length,E!==w.length-1)f+=n.length;else if(c)return P();if(!r||y.substr(0,_)!==r){if(g){if(v=[],D(y.split(t)),j(),h)return P()}else D(y.split(t));if(s&&E>=s)return v=v.slice(0,s),P(!0)}}return P()}for(var O=e.indexOf(t,f),R=e.indexOf(n,f),C=new RegExp(a+a,\"g\");;)if(e[f]!==a)if(r&&0===y.length&&e.substr(f,_)===r){if(-1===R)return P();f=R+p,R=e.indexOf(n,f),O=e.indexOf(t,f)}else if(-1!==O&&(O<R||-1===R))y.push(e.substring(f,O)),f=O+d,O=e.indexOf(t,f);else{if(-1===R)break;if(y.push(e.substring(f,R)),I(R+p),g&&(j(),h))return P();if(s&&v.length>=s)return P(!0)}else{var S=f;for(f++;;){var S=e.indexOf(a,S+1);if(-1===S)return c||m.push({type:\"Quotes\",code:\"MissingQuotes\",message:\"Quoted field unterminated\",row:v.length,index:f}),T();if(S===l-1){var x=e.substring(f,S).replace(C,a);return T(x)}if(e[S+1]!==a){if(e[S+1]===t){y.push(e.substring(f,S).replace(C,a)),f=S+1+d,O=e.indexOf(t,f),R=e.indexOf(n,f);break}if(e.substr(S+1,p)===n){if(y.push(e.substring(f,S).replace(C,a)),I(S+1+p),O=e.indexOf(t,f),g&&(j(),h))return P();if(s&&v.length>=s)return P(!0);break}m.push({type:\"Quotes\",code:\"InvalidQuotes\",message:\"Trailing quote on quoted field is malformed\",row:v.length,index:f}),S++}else S++}}return T();function D(e){v.push(e),b=f}function T(t){return c?P():(void 0===t&&(t=e.substr(f)),y.push(t),f=l,D(y),g&&j(),P())}function I(t){f=t,D(y),y=[],R=e.indexOf(n,f)}function P(e){return{data:v,errors:m,meta:{delimiter:t,linebreak:n,aborted:h,truncated:!!e,cursor:b+(u||0)}}}function j(){i(P()),v=[],m=[]}},this.abort=function(){h=!0},this.getCharIndex=function(){return f}}function v(e){var t=e.data,n=o[t.workerId],r=!1;if(t.error)n.userError(t.error,t.file);else if(t.results&&t.results.data){var i={abort:function(){r=!0,m(t.workerId,{data:[],errors:[],meta:{aborted:!0}})},pause:y,resume:y};if(k(n.userStep)){for(var s=0;s<t.results.data.length&&(n.userStep({data:[t.results.data[s]],errors:t.results.errors,meta:t.results.meta},i),!r);s++);delete t.results}else k(n.userChunk)&&(n.userChunk(t.results,i,t.file),delete t.results)}t.finished&&!r&&m(t.workerId,t.results)}function m(e,t){var n=o[e];k(n.userComplete)&&n.userComplete(t),n.terminate(),delete o[e]}function y(){throw\"Not implemented.\"}function b(e){if(\"object\"!=typeof e)return e;var t=e instanceof Array?[]:{};for(var n in e)t[n]=b(e[n]);return t}function w(e,t){return function(){e.apply(t,arguments)}}function k(e){return\"function\"==typeof e}return i?n.onmessage=function(e){var t=e.data;if(void 0===u.WORKER_ID&&t&&(u.WORKER_ID=t.workerId),\"string\"==typeof t.input)n.postMessage({workerId:u.WORKER_ID,results:u.parse(t.input,t.config),finished:!0});else if(n.File&&t.input instanceof File||t.input instanceof Object){var r=u.parse(t.input,t.config);r&&n.postMessage({workerId:u.WORKER_ID,results:r,finished:!0})}}:u.WORKERS_SUPPORTED&&(t=document.getElementsByTagName(\"script\"),e=t.length?t[t.length-1].src:\"\",document.body?document.addEventListener(\"DOMContentLoaded\",function(){s=!0},!0):s=!0),c.prototype=Object.create(h.prototype),c.prototype.constructor=c,l.prototype=Object.create(h.prototype),l.prototype.constructor=l,d.prototype=Object.create(d.prototype),d.prototype.constructor=d,p.prototype=Object.create(h.prototype),p.prototype.constructor=p,u})?r.apply(t,i):r)||(e.exports=s)},,function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var r=o(n(3)),i=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t}(n(1)),s=o(n(0));function o(e){return e&&e.__esModule?e:{default:e}}t.default=function e(t,n,o){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e);var a=i.grid_config;this.width=a.width=t||a.width,this.height=a.height=n||a.height,this.gridEvent=new s.default,void 0!==o&&new r.default(o).addEventListener(\"dataParsed\",function(e){console.log(\"EVENT FIRED AND LISTENED\"),console.log(e)})},e.exports=t.default}])});","extractedComments":[]}